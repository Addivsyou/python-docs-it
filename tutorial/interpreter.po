# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-30 08:10+0200\n"
"PO-Revision-Date: 2019-04-22 10:36+0200\n"
"Last-Translator: Alessandro Cucci <alessandro.cucci@gmail.com>\n"
"Language-Team: \n"
"Language: it_IT\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 2.2.1\n"

#: tutorial/interpreter.rst:5
msgid "Using the Python Interpreter"
msgstr "Uso dell'interprete di Python"

#: tutorial/interpreter.rst:11
msgid "Invoking the Interpreter"
msgstr "Invocazione dell'interprete"

#: tutorial/interpreter.rst:13
#, fuzzy
msgid ""
"The Python interpreter is usually installed as |"
"usr_local_bin_python_x_dot_y_literal| on those machines where it is "
"available; putting :file:`/usr/local/bin` in your Unix shell's search path "
"makes it possible to start it by typing the command:"
msgstr ""
"L'interprete Python è solitamente installato come :file:`/usr/local/bin/"
"python3.7` su quelle macchine dove è disponibile; aggiungere :file:`/usr/usr/"
"local/bin` al path di ricerca della vostra shell Unix rende possibile "
"avviarlo digitando il comando:"

#: tutorial/interpreter.rst:21
msgid ""
"to the shell. [#]_ Since the choice of the directory where the interpreter "
"lives is an installation option, other places are possible; check with your "
"local Python guru or system administrator.  (E.g., :file:`/usr/local/python` "
"is a popular alternative location.)"
msgstr ""
"alla shell. [#]_ Poiché la scelta della cartella in cui è situato "
"l'interprete è un'opzione di installazione, è possibile trovarlo anche in "
"altri percorsi; verificate con il vostro guru Python o con l'amministratore "
"di sistema.  (Ad esempio, :file:`/usr/local/python` è un'alternativa "
"popolare.)"

#: tutorial/interpreter.rst:26
msgid ""
"On Windows machines where you have installed Python from the :ref:`Microsoft "
"Store <windows-store>`, the |python_x_dot_y_literal| command will be "
"available. If you have the :ref:`py.exe launcher <launcher>` installed, you "
"can use the :file:`py` command. See :ref:`setting-envvars` for other ways to "
"launch Python."
msgstr ""

#: tutorial/interpreter.rst:31
msgid ""
"Typing an end-of-file character (:kbd:`Control-D` on Unix, :kbd:`Control-Z` "
"on Windows) at the primary prompt causes the interpreter to exit with a zero "
"exit status.  If that doesn't work, you can exit the interpreter by typing "
"the following command: ``quit()``."
msgstr ""
"Digitando un carattere di fine file (:kbd:`Control-D` su Unix, :kbd:`Control-"
"Z` su Windows) nel prompt, l'interprete esce con stato zero.  Se non "
"funziona, è possibile uscire dall'interprete digitando il seguente comando: "
"``quit()``."

#: tutorial/interpreter.rst:36
#, fuzzy
msgid ""
"The interpreter's line-editing features include interactive editing, history "
"substitution and code completion on systems that support the `GNU Readline "
"<https://tiswww.case.edu/php/chet/readline/rltop.html>`_ library. Perhaps "
"the quickest check to see whether command line editing is supported is "
"typing :kbd:`Control-P` to the first Python prompt you get.  If it beeps, "
"you have command line editing; see Appendix :ref:`tut-interacting` for an "
"introduction to the keys.  If nothing appears to happen, or if ``^P`` is "
"echoed, command line editing isn't available; you'll only be able to use "
"backspace to remove characters from the current line."
msgstr ""
"Le funzioni di editing di linea dell'interprete includono l'editing "
"interattivo, la sostituzione della storia e il completamento del codice su "
"sistemi che supportano la lettura in linea.  Forse il controllo più veloce "
"per vedere se la modifica da riga di comando è supportata è digitando :kbd:"
"`Control-P` al primo prompt di Python che si ottiene.  Se emette un segnale "
"acustico, si ha una modifica da riga di comando; vedere Appendix :ref:`tut-"
"interacting` per un'introduzione alle combinazioni di tasti.  Se non vi "
"sembra accada nulla, o se vedete la stringa ``^P``, la modifica a riga di "
"comando non è disponibile; potrai usare solo il backspace per rimuovere i "
"caratteri dalla riga corrente."

#: tutorial/interpreter.rst:46
msgid ""
"The interpreter operates somewhat like the Unix shell: when called with "
"standard input connected to a tty device, it reads and executes commands "
"interactively; when called with a file name argument or with a file as "
"standard input, it reads and executes a *script* from that file."
msgstr ""
"L'interprete opera in maniera simile alla shell Unix: quando viene chiamato "
"con lo *standard input* collegato ad un dispositivo tty, legge ed esegue i "
"comandi in modo interattivo; quando viene chiamato con un nome di file come "
"argomento o con un file come *standard input*, legge ed esegue un *script* "
"da quel file."

#: tutorial/interpreter.rst:51
#, fuzzy
msgid ""
"A second way of starting the interpreter is ``python -c command [arg] ...``, "
"which executes the statement(s) in *command*, analogous to the shell's :"
"option:`-c` option.  Since Python statements often contain spaces or other "
"characters that are special to the shell, it is usually advised to quote "
"*command* in its entirety."
msgstr ""
"Un secondo modo di iniziare l'interprete è ``python -c command [arg] ...``, "
"che esegue le istruzioni in *command*, analogamente all'opzione :option:`-"
"c`.  Poiché le istruzioni di Python spesso contengono spazi o altri "
"caratteri speciali per la shell, di solito si consiglia di racchiudere "
"*command*, nella sua interezza, con apici singoli."

#: tutorial/interpreter.rst:57
msgid ""
"Some Python modules are also useful as scripts.  These can be invoked using "
"``python -m module [arg] ...``, which executes the source file for *module* "
"as if you had spelled out its full name on the command line."
msgstr ""
"Alcuni moduli Python sono utili anche come script.  Questi possono essere "
"invocati usando ``python -m module [arg] ...``, che esegue il file sorgente "
"del *modulo* come se tu avessi scritto il suo nome completo sulla riga di "
"comando."

#: tutorial/interpreter.rst:61
msgid ""
"When a script file is used, it is sometimes useful to be able to run the "
"script and enter interactive mode afterwards.  This can be done by passing :"
"option:`-i` before the script."
msgstr ""
"Quando si utilizza un file di script, a volte è utile essere in grado di "
"eseguire lo script ed entrare in modalità interattiva in seguito.  Questo "
"può essere fatto passando :option:`-i` prima dello script."

#: tutorial/interpreter.rst:65
msgid "All command line options are described in :ref:`using-on-general`."
msgstr ""
"Tutte le opzioni della riga di comando sono descritte in :ref:`using-on-"
"general`."

#: tutorial/interpreter.rst:71
msgid "Argument Passing"
msgstr "Passare Argomenti"

#: tutorial/interpreter.rst:73
msgid ""
"When known to the interpreter, the script name and additional arguments "
"thereafter are turned into a list of strings and assigned to the ``argv`` "
"variable in the ``sys`` module.  You can access this list by executing "
"``import sys``.  The length of the list is at least one; when no script and "
"no arguments are given, ``sys.argv[0]`` is an empty string.  When the script "
"name is given as ``'-'`` (meaning  standard input), ``sys.argv[0]`` is set "
"to ``'-'``.  When :option:`-c` *command* is used, ``sys.argv[0]`` is set to "
"``'-c'``.  When :option:`-m` *module* is used, ``sys.argv[0]``  is set to "
"the full name of the located module.  Options found after  :option:`-c` "
"*command* or :option:`-m` *module* are not consumed  by the Python "
"interpreter's option processing but left in ``sys.argv`` for  the command or "
"module to handle."
msgstr ""
"Una volta resi noti all'interprete, il nome dello script e gli argomenti "
"aggiuntivi vengono poi trasformati in una lista di stringhe e assegnati alla "
"variabile ``argv`` nel modulo ``sys``.  È possibile accedere a questa lista "
"eseguendo ``importa sys``.  La lunghezza della lista è almeno una; quando "
"non viene dato alcuno script e nessun argomento, ``sys.argv[0]`` è una "
"stringa vuota.  Quando il nome dello script è dato come ``'-'`` (che "
"significa ingresso standard), ``sys.argv[0]`` è settato a ``’-‘``. Quando è "
"usato il *comando* :option:`-c`, ``sys.argv[0]`` viene settato a ``’-c’``.  "
"Quando viene usato il *modulo* :option:`-m`, ``sys.argv[0]``  viene "
"impostato con il nome completo del modulo. Tutte le opzioni trovate dopo i "
"comandi :option:`-c` o i moduli :option:`-m` non vengono consumati "
"dell’interprete di Python che processa le opzioni, ma vengono lasciate in "
"``sys.argv`` in modo che vengano poi gestite manualmente dal comando o dal "
"modulo."

#: tutorial/interpreter.rst:89
msgid "Interactive Mode"
msgstr "Modalità Interattiva"

#: tutorial/interpreter.rst:91
msgid ""
"When commands are read from a tty, the interpreter is said to be in "
"*interactive mode*.  In this mode it prompts for the next command with the "
"*primary prompt*, usually three greater-than signs (``>>>``); for "
"continuation lines it prompts with the *secondary prompt*, by default three "
"dots (``...``). The interpreter prints a welcome message stating its version "
"number and a copyright notice before printing the first prompt:"
msgstr ""
"Quando i comandi vengono letti da una tty, l'interprete è detto essere in "
"*modo interattivo*.  In questa modalità richiede il comando successivo con "
"il *prompt*, di solito tre simboli di *maggiore di* (``>>>``); per le linee "
"di continuazione viene emesso un *prompt* secondario, che per impostazione "
"predefinita consiste di tre punti (``...``). L'interprete stampa un "
"messaggio di benvenuto indicando il numero di versione e un avviso di "
"copyright prima di stampare il *prompt*:"

#: tutorial/interpreter.rst:108
msgid ""
"Continuation lines are needed when entering a multi-line construct. As an "
"example, take a look at this :keyword:`if` statement::"
msgstr ""
"Le linee di continuazione sono necessarie quando si inserisce un costrutto "
"su più linee. Come esempio, date un'occhiata a questa dichiarazione :keyword:"
"`if`::"

#: tutorial/interpreter.rst:118
msgid "For more on interactive mode, see :ref:`tut-interac`."
msgstr ""
"Per ulteriori informazioni sulla modalità interattiva, vedere :ref:`tut-"
"interac`."

#: tutorial/interpreter.rst:124
msgid "The Interpreter and Its Environment"
msgstr "L'interprete e il suo ambiente"

#: tutorial/interpreter.rst:130
msgid "Source Code Encoding"
msgstr "Codifica del codice sorgente"

#: tutorial/interpreter.rst:132
msgid ""
"By default, Python source files are treated as encoded in UTF-8.  In that "
"encoding, characters of most languages in the world can be used "
"simultaneously in string literals, identifiers and comments --- although the "
"standard library only uses ASCII characters for identifiers, a convention "
"that any portable code should follow.  To display all these characters "
"properly, your editor must recognize that the file is UTF-8, and it must use "
"a font that supports all the characters in the file."
msgstr ""
"Per impostazione predefinita, i file sorgente di Python sono trattati come "
"codificati in UTF-8.  In questa codifica, i caratteri della maggior parte "
"delle lingue del mondo possono essere usati simultaneamente in stringhe, "
"variabili e commenti --- la libreria standard tuttavia usa solo caratteri "
"ASCII per le variabili, una convenzione che ogni codice portatile dovrebbe "
"seguire.  Per visualizzare correttamente tutti questi caratteri, l'editor "
"deve riconoscere che il file è UTF-8, e deve utilizzare un font che supporti "
"tutti i caratteri del file."

#: tutorial/interpreter.rst:140
msgid ""
"To declare an encoding other than the default one, a special comment line "
"should be added as the *first* line of the file.  The syntax is as follows::"
msgstr ""
"Per dichiarare una codifica diversa da quella predefinita, è necessario "
"aggiungere un commento speciale come *prima* riga del file.  La sintassi è "
"la seguente::"

#: tutorial/interpreter.rst:145
msgid "where *encoding* is one of the valid :mod:`codecs` supported by Python."
msgstr "dove *codifica* è uno dei :mod:`codecs` validi supportati da Python."

#: tutorial/interpreter.rst:147
msgid ""
"For example, to declare that Windows-1252 encoding is to be used, the first "
"line of your source code file should be::"
msgstr ""
"Per esempio, per dichiarare che deve essere usata la codifica Windows-1252, "
"la prima riga del file del codice sorgente dovrebbe essere::"

#: tutorial/interpreter.rst:152
msgid ""
"One exception to the *first line* rule is when the source code starts with "
"a :ref:`UNIX \"shebang\" line <tut-scripts>`.  In this case, the encoding "
"declaration should be added as the second line of the file.  For example::"
msgstr ""
"Un'eccezione alla regola della *prima linea* è quando il codice sorgente "
"inizia con una linea :ref:`UNIX “shebang” line <tut-scripts>`. In questo "
"caso, la dichiarazione della codifica dovrebbe essere aggiunta come seconda "
"riga del file.  Per esempio::"

#: tutorial/interpreter.rst:160
msgid "Footnotes"
msgstr "Note"

#: tutorial/interpreter.rst:161
msgid ""
"On Unix, the Python 3.x interpreter is by default not installed with the "
"executable named ``python``, so that it does not conflict with a "
"simultaneously installed Python 2.x executable."
msgstr ""
"Su Unix, l'interprete Python 3.x non è installato di default con "
"l'eseguibile chiamato ``python``, in modo che non sia in conflitto con un "
"eseguibile Python 2.x installato contemporaneamente."

#~ msgid ""
#~ "On Windows machines, the Python installation is usually placed in :file:"
#~ "`C:\\\\Python37`, though you can change this when you're running the "
#~ "installer.  To add this directory to your path,  you can type the "
#~ "following command into :ref:`a command prompt window <faq-run-program-"
#~ "under-windows>`::"
#~ msgstr ""
#~ "Sulle macchine Windows, l'installazione di Python si trova solitamente "
#~ "in :file:`C:\\\\Python37`, anche se è possibile cambiarlo quando si "
#~ "esegue l’installazione.  Per aggiungere questa directory al proprio "
#~ "percorso, è possibile digitare il seguente comando in :ref:`a command "
#~ "prompt window <faq-run-program-under-windows>`::"
