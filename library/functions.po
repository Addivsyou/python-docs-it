# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-01 22:59+0200\n"
"PO-Revision-Date: 2024-05-31 09:19+0200\n"
"Last-Translator: Alessandro Cucci <alessandro.cucci@gmail.com>\n"
"Language-Team: \n"
"Language: it_IT\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 2.2.1\n"

#: library/functions.rst:11
msgid "Built-in Functions"
msgstr "Funzioni Incorporate"

#: library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr ""
"L'interprete Python ha un certo numero di funzioni e tipi incorporati che "
"sono sempre disponibili. Sono elencati qui in ordine alfabetico."

#: library/functions.rst:0
msgid "**A**"
msgstr "**A**"

#: library/functions.rst:0
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: library/functions.rst:0
msgid ":func:`aiter`"
msgstr ":func:`aiter`"

#: library/functions.rst:0
msgid ":func:`all`"
msgstr ":func:`all`"

#: library/functions.rst:0
msgid ":func:`anext`"
msgstr ":func:`anext`"

#: library/functions.rst:0
msgid ":func:`any`"
msgstr ":func:`any`"

#: library/functions.rst:0
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: library/functions.rst:0
msgid "**B**"
msgstr "**B**"

#: library/functions.rst:0
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: library/functions.rst:0
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: library/functions.rst:0
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: library/functions.rst:0
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: library/functions.rst:0
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: library/functions.rst:0
msgid "**C**"
msgstr "**C**"

#: library/functions.rst:0
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: library/functions.rst:0
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: library/functions.rst:0
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: library/functions.rst:0
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: library/functions.rst:0
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: library/functions.rst:0
msgid "**D**"
msgstr "**D**"

#: library/functions.rst:0
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: library/functions.rst:0
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: library/functions.rst:0
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: library/functions.rst:0
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: library/functions.rst:0
msgid "**E**"
msgstr "**E**"

#: library/functions.rst:0
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: library/functions.rst:0
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: library/functions.rst:0
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: library/functions.rst:0
msgid "**F**"
msgstr "**F**"

#: library/functions.rst:0
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: library/functions.rst:0
msgid ":func:`float`"
msgstr ":func:`float`"

#: library/functions.rst:0
msgid ":func:`format`"
msgstr ":func:`format`"

#: library/functions.rst:0
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: library/functions.rst:0
msgid "**G**"
msgstr "**G**"

#: library/functions.rst:0
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: library/functions.rst:0
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: library/functions.rst:0
msgid "**H**"
msgstr "**H**"

#: library/functions.rst:0
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: library/functions.rst:0
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: library/functions.rst:0
msgid ":func:`help`"
msgstr ":func:`help`"

#: library/functions.rst:0
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: library/functions.rst:0
msgid "**I**"
msgstr "**I**"

#: library/functions.rst:0
msgid ":func:`id`"
msgstr ":func:`id`"

#: library/functions.rst:0
msgid ":func:`input`"
msgstr ":func:`input`"

#: library/functions.rst:0
msgid ":func:`int`"
msgstr ":func:`int`"

#: library/functions.rst:0
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: library/functions.rst:0
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: library/functions.rst:0
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: library/functions.rst:0
msgid "**L**"
msgstr "**L**"

#: library/functions.rst:0
msgid ":func:`len`"
msgstr ":func:`len`"

#: library/functions.rst:0
msgid "|func-list|_"
msgstr "|func-list|_"

#: library/functions.rst:0
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: library/functions.rst:0
msgid "**M**"
msgstr "**M**"

#: library/functions.rst:0
msgid ":func:`map`"
msgstr ":func:`map`"

#: library/functions.rst:0
msgid ":func:`max`"
msgstr ":func:`max`"

#: library/functions.rst:0
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: library/functions.rst:0
msgid ":func:`min`"
msgstr ":func:`min`"

#: library/functions.rst:0
msgid "**N**"
msgstr "**N**"

#: library/functions.rst:0
msgid ":func:`next`"
msgstr ":func:`next`"

#: library/functions.rst:0
msgid "**O**"
msgstr "**O**"

#: library/functions.rst:0
msgid ":func:`object`"
msgstr ":func:`object`"

#: library/functions.rst:0
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: library/functions.rst:0
msgid ":func:`open`"
msgstr ":func:`open`"

#: library/functions.rst:0
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: library/functions.rst:0
msgid "**P**"
msgstr "**P**"

#: library/functions.rst:0
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: library/functions.rst:0
msgid ":func:`print`"
msgstr ":func:`print`"

#: library/functions.rst:0
msgid ":func:`property`"
msgstr ":func:`property`"

#: library/functions.rst:0
msgid "**R**"
msgstr "**R**"

#: library/functions.rst:0
msgid "|func-range|_"
msgstr "|func-range|_"

#: library/functions.rst:0
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: library/functions.rst:0
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: library/functions.rst:0
msgid ":func:`round`"
msgstr ":func:`round`"

#: library/functions.rst:0
msgid "**S**"
msgstr "**S**"

#: library/functions.rst:0
msgid "|func-set|_"
msgstr "|func-set|_"

#: library/functions.rst:0
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: library/functions.rst:0
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: library/functions.rst:0
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: library/functions.rst:0
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: library/functions.rst:0
msgid "|func-str|_"
msgstr "|func-str|_"

#: library/functions.rst:0
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: library/functions.rst:0
msgid ":func:`super`"
msgstr ":func:`super`"

#: library/functions.rst:0
msgid "**T**"
msgstr "**T**"

#: library/functions.rst:0
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: library/functions.rst:0
msgid ":func:`type`"
msgstr ":func:`type`"

#: library/functions.rst:0
msgid "**V**"
msgstr "**V**"

#: library/functions.rst:0
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: library/functions.rst:0
msgid "**Z**"
msgstr "**Z**"

#: library/functions.rst:0
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: library/functions.rst:0
msgid "**_**"
msgstr "**_**"

#: library/functions.rst:0
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: library/functions.rst:59
msgid ""
"Return the absolute value of a number.  The argument may be an integer, a "
"floating point number, or an object implementing :meth:`~object.__abs__`. If "
"the argument is a complex number, its magnitude is returned."
msgstr ""
"Restituisce il valore assoluto di un numero. L'argomento può essere un "
"intero, un numero in virgola mobile o un oggetto che implementa :meth:"
"`~object.__abs__`. Se l'argomento è un numero complesso, ne viene restituita "
"la magnitudine."

#: library/functions.rst:67
msgid ""
"Return an :term:`asynchronous iterator` for an :term:`asynchronous "
"iterable`. Equivalent to calling ``x.__aiter__()``."
msgstr ""
"Restituisce un :term:`asynchronous iterator` per un :term:`asynchronous "
"iterable`. Equivalente a chiamare ``x.__aiter__()``."

#: library/functions.rst:70
msgid "Note: Unlike :func:`iter`, :func:`aiter` has no 2-argument variant."
msgstr ""
"Nota: A differenza di :func:`iter`, :func:`aiter` non ha una variante con 2 "
"argomenti."

#: library/functions.rst:76
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr ""
"Restituisce ``True`` se tutti gli elementi dell'*iterable* sono veri (o se "
"l'iterable è vuoto). Equivalente a::"

#: library/functions.rst:89
msgid ""
"When awaited, return the next item from the given :term:`asynchronous "
"iterator`, or *default* if given and the iterator is exhausted."
msgstr ""
"Quando viene atteso, restituisce l'elemento successivo dall':term:"
"`asynchronous iterator` dato, o *default* se fornito e l'iteratore è "
"esaurito."

#: library/functions.rst:92
msgid ""
"This is the async variant of the :func:`next` builtin, and behaves similarly."
msgstr ""
"Questa è la variante asincrona del builtin :func:`next`, e si comporta in "
"modo simile."

#: library/functions.rst:95
msgid ""
"This calls the :meth:`~object.__anext__` method of *async_iterator*, "
"returning an :term:`awaitable`. Awaiting this returns the next value of the "
"iterator. If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopAsyncIteration` is raised."
msgstr ""
"Questo chiama il metodo :meth:`~object.__anext__` di *async_iterator*, "
"restituendo un :term:`awaitable`. Attendere questo restituisce il prossimo "
"valore dell'iteratore. Se *default* è fornito, viene restituito se "
"l'iteratore è esaurito, altrimenti viene sollevata l'eccezione :exc:"
"`StopAsyncIteration`."

#: library/functions.rst:104
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr ""
"Restituisce ``True`` se qualche elemento dell'*iterable* è vero. Se "
"l'iterable è vuoto, restituisce ``False``. Equivalente a::"

#: library/functions.rst:116
msgid ""
"As :func:`repr`, return a string containing a printable representation of an "
"object, but escape the non-ASCII characters in the string returned by :func:"
"`repr` using ``\\x``, ``\\u``, or ``\\U`` escapes.  This generates a string "
"similar to that returned by :func:`repr` in Python 2."
msgstr ""
"Come :func:`repr`, restituisce una stringa contenente una rappresentazione "
"stampabile di un oggetto, ma escapa i caratteri non ASCII nella stringa "
"restituita da :func:`repr` utilizzando le sequenze di escape ``\\x``, "
"``\\u`` o ``\\U``. Ciò genera una stringa simile a quella restituita da :"
"func:`repr` in Python 2."

#: library/functions.rst:124
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`~object.__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"Converte un numero intero in una stringa binaria preceduta da \"0b\". Il "
"risultato è un'espressione Python valida. Se *x* non è un oggetto :class:"
"`int` di Python, deve definire un metodo :meth:`~object.__index__` che "
"restituisce un intero. Alcuni esempi:"

#: library/functions.rst:134
msgid ""
"If the prefix \"0b\" is desired or not, you can use either of the following "
"ways."
msgstr ""
"Se si desidera il prefisso \"0b\" oppure no, è possibile utilizzare uno dei "
"seguenti modi."

#: library/functions.rst:909 library/functions.rst:1246
msgid "See also :func:`format` for more information."
msgstr "Vedi anche :func:`format` per maggiori informazioni."

#: library/functions.rst:146
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  The argument is "
"converted using the standard :ref:`truth testing procedure <truth>`. If the "
"argument is false or omitted, this returns ``False``; otherwise, it returns "
"``True``.  The :class:`bool` class is a subclass of :class:`int` (see :ref:"
"`typesnumeric`). It cannot be subclassed further.  Its only instances are "
"``False`` and ``True`` (see :ref:`typebool`)."
msgstr ""
"Restituisce un valore booleano, ossia uno tra ``True`` o ``False``. "
"L'argomento viene convertito utilizzando la procedura standard di :ref:"
"`verifica della verità <truth>`. Se l'argomento è falso o omesso, "
"restituisce ``False``; altrimenti, restituisce ``True``. La classe :class:"
"`bool` è una sottoclasse di :class:`int` (vedi :ref:`typesnumeric`). Non può "
"essere ulteriormente sottoclassata. I suoi unici istanze sono ``False`` e "
"``True`` (vedi :ref:`typebool`)."

#: library/functions.rst:774
msgid "The parameter is now positional-only."
msgstr "Il parametro ora è solo posizionale."

#: library/functions.rst:161
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace()` "
"expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing "
"you to drop into the debugger of choice. If :func:`sys.breakpointhook` is "
"not accessible, this function will raise :exc:`RuntimeError`."
msgstr ""
"Questa funzione ti porta nel debugger nel punto in cui viene chiamata. In "
"particolare, chiama :func:`sys.breakpointhook`, passando ``args`` e ``kws`` "
"direttamente. Per impostazione predefinita, ``sys.breakpointhook()`` chiama :"
"func:`pdb.set_trace()` senza argomenti. In questo caso, è puramente una "
"funzione di comodità in modo da non dover importare esplicitamente :mod:"
"`pdb` o digitare tanto codice per entrare nel debugger. Tuttavia, :func:`sys."
"breakpointhook` può essere impostata su un'altra funzione e :func:"
"`breakpoint` la chiamerà automaticamente, permettendo di entrare nel "
"debugger a scelta. Se :func:`sys.breakpointhook` non è accessibile, questa "
"funzione solleverà :exc:`RuntimeError`."

#: library/functions.rst:173
msgid ""
"By default, the behavior of :func:`breakpoint` can be changed with the :"
"envvar:`PYTHONBREAKPOINT` environment variable. See :func:`sys."
"breakpointhook` for usage details."
msgstr ""
"Per impostazione predefinita, il comportamento di :func:`breakpoint` può "
"essere modificato con la variabile d'ambiente :envvar:`PYTHONBREAKPOINT`. "
"Vedi :func:`sys.breakpointhook` per i dettagli d'uso."

#: library/functions.rst:177
msgid ""
"Note that this is not guaranteed if :func:`sys.breakpointhook` has been "
"replaced."
msgstr ""
"Nota che ciò non è garantito se :func:`sys.breakpointhook` è stato "
"sostituito."

#: library/functions.rst:180
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.breakpoint`` with "
"argument ``breakpointhook``."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``builtins.breakpoint`` con "
"l'argomento ``breakpointhook``."

#: library/functions.rst:190
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"Restituisce un nuovo array di byte. La classe :class:`bytearray` è una "
"sequenza mutabile di interi nell'intervallo 0 <= x < 256. Ha la maggior "
"parte dei metodi usuali delle sequenze mutabili, descritti in :ref:`typesseq-"
"mutable`, oltre alla maggior parte dei metodi che il tipo :class:`bytes` ha, "
"vedi :ref:`bytes-methods`."

#: library/functions.rst:195
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""
"Il parametro opzionale *source* può essere utilizzato per inizializzare "
"l'array in diversi modi:"

#: library/functions.rst:198
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"Se è una *string*, devi anche dare i parametri *encoding* (e "
"facoltativamente, *errors*); :func:`bytearray` quindi converte la stringa in "
"byte utilizzando :meth:`str.encode`."

#: library/functions.rst:202
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""
"Se è un *integer*, l'array avrà quella dimensione e sarà inizializzato con "
"byte nulli."

#: library/functions.rst:205
msgid ""
"If it is an object conforming to the :ref:`buffer interface "
"<bufferobjects>`, a read-only buffer of the object will be used to "
"initialize the bytes array."
msgstr ""
"Se è un oggetto conforme all':ref:`interfaccia buffer <bufferobjects>`, un "
"buffer di sola lettura dell'oggetto sarà utilizzato per inizializzare "
"l'array di byte."

#: library/functions.rst:208
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""
"Se è un *iterable*, deve essere un iterable di interi nell'intervallo ``0 <= "
"x < 256``, che sono usati come contenuto iniziale dell'array."

#: library/functions.rst:211
msgid "Without an argument, an array of size 0 is created."
msgstr "Senza un argomento, viene creato un array di dimensione 0."

#: library/functions.rst:213
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr "Vedi anche :ref:`binaryseq` e :ref:`typebytearray`."

#: library/functions.rst:222
msgid ""
"Return a new \"bytes\" object which is an immutable sequence of integers in "
"the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of :"
"class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"Restituisce un nuovo oggetto \"bytes\" che è una sequenza immutabile di "
"interi nell'intervallo ``0 <= x < 256``. :class:`bytes` è una versione "
"immutabile di :class:`bytearray` -- ha gli stessi metodi non mutanti e lo "
"stesso comportamento di indicizzazione e slicing."

#: library/functions.rst:227
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr ""
"Di conseguenza, gli argomenti del costruttore sono interpretati come per :"
"func:`bytearray`."

#: library/functions.rst:229
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr ""
"Gli oggetti byte possono essere creati anche con letterali, vedi :ref:"
"`strings`."

#: library/functions.rst:231
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr "Vedi anche :ref:`binaryseq`, :ref:`typebytes`, e :ref:`bytes-methods`."

#: library/functions.rst:236
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns ``True``, it is still possible that a call "
"fails, but if it is ``False``, calling *object* will never succeed. Note "
"that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`~object.__call__` method."
msgstr ""
"Restituisce :const:`True` se l'argomento *object* appare chiamabile, :const:"
"`False` se non lo è. Se questo restituisce ``True``, è ancora possibile che "
"una chiamata fallisca, ma se è ``False``, chiamare *object* non avrà mai "
"successo. Nota che le classi sono chiamabili (chiamare una classe "
"restituisce una nuova istanza); le istanze sono chiamabili se la loro classe "
"ha un metodo :meth:`~object.__call__`."

#: library/functions.rst:242
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr ""
"Questa funzione è stata prima rimossa in Python 3.0 e poi reintegrata in "
"Python 3.2."

#: library/functions.rst:249
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of :func:`ord`."
msgstr ""
"Restituisce la stringa che rappresenta un carattere il cui punto di codice "
"Unicode è l'intero *i*. Ad esempio, ``chr(97)`` restituisce la stringa "
"``'a'``, mentre ``chr(8364)`` restituisce la stringa ``'€'``. Questo è "
"l'inverso di :func:`ord`."

#: library/functions.rst:253
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"L'intervallo valido per l'argomento va da 0 a 1.114.111 (0x10FFFF in base "
"16). Viene sollevata un'eccezione :exc:`ValueError` se *i* è fuori da questo "
"intervallo."

#: library/functions.rst:259
msgid "Transform a method into a class method."
msgstr "Trasforma un metodo in un metodo di classe."

#: library/functions.rst:261
msgid ""
"A class method receives the class as an implicit first argument, just like "
"an instance method receives the instance. To declare a class method, use "
"this idiom::"
msgstr ""
"Un metodo di classe riceve la classe come primo argomento implicito, proprio "
"come un metodo di istanza riceve l'istanza. Per dichiarare un metodo di "
"classe, utilizza questo idiom::"

#: library/functions.rst:269
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"La forma ``@classmethod`` è un :term:`decorator` di funzione -- vedi :ref:"
"`function` per i dettagli."

#: library/functions.rst:272
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"Un metodo di classe può essere chiamato sia sulla classe (come ``C.f()``) "
"sia su un'istanza (come ``C().f()``). L'istanza è ignorata tranne che per la "
"sua classe. Se un metodo di classe è chiamato per una classe derivata, "
"l'oggetto della classe derivata è passato come primo argomento implicito."

#: library/functions.rst:277
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod` in this section. For more information on "
"class methods, see :ref:`types`."
msgstr ""
"I metodi di classe sono diversi dai metodi statici di C++ o Java. Se "
"desideri quelli, vedi :func:`staticmethod` in questa sezione. Per maggiori "
"informazioni sui metodi di classe, vedi :ref:`types`."

#: library/functions.rst:281
msgid ""
"Class methods can now wrap other :term:`descriptors <descriptor>` such as :"
"func:`property`."
msgstr ""
"I metodi di classe ora possono avvolgere altri :term:`descrittori "
"<descriptor>` come :func:`property`."

#: library/functions.rst:285
msgid ""
"Class methods now inherit the method attributes (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``) and "
"have a new ``__wrapped__`` attribute."
msgstr ""
"I metodi di classe ora ereditano gli attributi del metodo (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` e ``__annotations__``) e hanno "
"un nuovo attributo ``__wrapped__``."

#: library/functions.rst:290
msgid ""
"Class methods can no longer wrap other :term:`descriptors <descriptor>` such "
"as :func:`property`."
msgstr ""
"I metodi di classe non possono più avvolgere altri :term:`descrittori "
"<descriptor>` come :func:`property`."

#: library/functions.rst:297
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"Compila il *source* in un oggetto codice o AST. Gli oggetti codice possono "
"essere eseguiti da :func:`exec` o :func:`eval`. *source* può essere una "
"stringa normale, una stringa di byte o un oggetto AST. Consulta la "
"documentazione del modulo :mod:`ast` per informazioni su come lavorare con "
"gli oggetti AST."

#: library/functions.rst:302
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"L'argomento *filename* dovrebbe indicare il file da cui il codice è stato "
"letto; passa un valore riconoscibile se non è stato letto da un file "
"(``'<string>'`` è comunemente utilizzato)."

#: library/functions.rst:306
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""
"L'argomento *mode* specifica il tipo di codice che deve essere compilato; "
"può essere ``'exec'`` se *source* è costituito da una sequenza di "
"istruzioni, ``'eval'`` se è costituito da una singola espressione, o "
"``'single'`` se è costituito da una singola istruzione interattiva (in "
"quest'ultimo caso, le istruzioni di espressione che valutano a qualcosa di "
"diverso da ``None`` saranno stampate)."

#: library/functions.rst:312
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:"
"`compiler options <ast-compiler-flags>` should be activated and which :ref:"
"`future features <future>` should be allowed. If neither is present (or both "
"are zero) the code is compiled with the same flags that affect the code that "
"is calling :func:`compile`. If the *flags* argument is given and "
"*dont_inherit* is not (or is zero) then the compiler options and the future "
"statements specified by the *flags* argument are used in addition to those "
"that would be used anyway. If *dont_inherit* is a non-zero integer then the "
"*flags* argument is it -- the flags (future features and compiler options) "
"in the surrounding code are ignored."
msgstr ""
"Gli argomenti opzionali *flags* e *dont_inherit* controllano quali :ref:"
"`opzioni del compilatore <ast-compiler-flags>` devono essere attivate e "
"quali :ref:`future features <future>` dovrebbero essere consentite. Se "
"nessuno dei due è presente (o entrambi sono zero), il codice viene compilato "
"con le stesse opzioni che influenzano il codice che chiama :func:`compile`. "
"Se l'argomento *flags* è fornito e *dont_inherit* non è (o è zero) allora le "
"opzioni del compilatore e le dichiarazioni future specificate dall'argomento "
"*flags* vengono utilizzate in aggiunta a quelle che sarebbero comunque "
"utilizzate. Se *dont_inherit* è un numero intero diverso da zero, "
"l'argomento *flags* è quello -- le opzioni del compilatore (future features "
"e opzioni del compilatore) nel codice circostante sono ignorate."

#: library/functions.rst:323
msgid ""
"Compiler options and future statements are specified by bits which can be "
"bitwise ORed together to specify multiple options. The bitfield required to "
"specify a given future feature can be found as the :attr:`~__future__."
"_Feature.compiler_flag` attribute on the :class:`~__future__._Feature` "
"instance in the :mod:`__future__` module. :ref:`Compiler flags <ast-compiler-"
"flags>` can be found in :mod:`ast` module, with ``PyCF_`` prefix."
msgstr ""
"Le opzioni del compilatore e le dichiarazioni future sono specificate da bit "
"che possono essere combinati con l'operatore OR bit a bit per specificare "
"più opzioni. Il campo di bit richiesto per specificare una particolare "
"future feature può essere trovato come attributo :attr:`~__future__._Feature."
"compiler_flag` sull'istanza :class:`~__future__._Feature` nel modulo :mod:"
"`__future__`. Le :ref:`flag del compilatore <ast-compiler-flags>` possono "
"essere trovate nel modulo :mod:`ast`, con il prefisso ``PyCF_``."

#: library/functions.rst:331
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no "
"optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"L'argomento *optimize* specifica il livello di ottimizzazione del "
"compilatore; il valore predefinito ``-1`` seleziona il livello di "
"ottimizzazione dell'interprete come indicato dalle opzioni :option:`-O`. I "
"livelli espliciti sono ``0`` (nessuna ottimizzazione; ``__debug__`` è vero), "
"``1`` (gli assert vengono rimossi, ``__debug__`` è falso) o ``2`` (anche i "
"docstring vengono rimossi)."

#: library/functions.rst:337
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"Questa funzione solleva :exc:`SyntaxError` se la sorgente compilata non è "
"valida, e :exc:`ValueError` se la sorgente contiene byte nulli."

#: library/functions.rst:340
msgid ""
"If you want to parse Python code into its AST representation, see :func:`ast."
"parse`."
msgstr ""
"Se vuoi fare il parsing del codice Python nella sua rappresentazione AST, "
"vedi :func:`ast.parse`."

#: library/functions.rst:343
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source``, ``filename``."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``compile`` con argomenti "
"``source``, ``filename``."

#: library/functions.rst:345
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source`` and ``filename``. This event may also be raised by implicit "
"compilation."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``compile`` con argomenti "
"``source`` e ``filename``. Questo evento può essere sollevato anche dalla "
"compilazione implicita."

#: library/functions.rst:351
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""
"Quando si compila una stringa con codice multi-linea in modalità "
"``'single'`` o ``'eval'``, l'input deve essere terminato da almeno un "
"carattere di nuova riga. Questo per facilitare il rilevamento delle "
"istruzioni incomplete e complete nel modulo :mod:`code`."

#: library/functions.rst:358
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"È possibile mandare in crash l'interprete Python con una stringa "
"sufficientemente grande/complessa quando si compila in un oggetto AST a "
"causa delle limitazioni della profondità dello stack del compilatore AST di "
"Python."

#: library/functions.rst:362
msgid ""
"Allowed use of Windows and Mac newlines.  Also, input in ``'exec'`` mode "
"does not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr ""
"Consentito l'uso delle newline di Windows e Mac. Inoltre, l'input in "
"modalità ``'exec'`` non deve più terminare con una newline. Aggiunto il "
"parametro *optimize*."

#: library/functions.rst:366
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr ""
"In precedenza, veniva sollevata un'eccezione :exc:`TypeError` quando "
"venivano incontrati byte nulli nella sorgente."

#: library/functions.rst:370
msgid ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` can now be passed in flags to enable "
"support for top-level ``await``, ``async for``, and ``async with``."
msgstr ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` può ora essere passato in flags per "
"abilitare il supporto per ``await``, ``async for`` e ``async with`` al "
"livello superiore."

#: library/functions.rst:379
msgid ""
"Convert a single string or number to a complex number, or create a complex "
"number from real and imaginary parts."
msgstr ""
"Converte una singola stringa o numero in un numero complesso, oppure crea un "
"numero complesso dalle parti reale e immaginaria."

#: library/functions.rst:719 library/functions.rst:965
msgid "Examples:"
msgstr "Esempi:"

#: library/functions.rst:403
msgid ""
"If the argument is a string, it must contain either a real part (in the same "
"format as for :func:`float`) or an imaginary part (in the same format but "
"with a ``'j'`` or ``'J'`` suffix), or both real and imaginary parts (the "
"sign of the imaginary part is mandatory in this case). The string can "
"optionally be surrounded by whitespaces and the round parentheses ``'('`` "
"and ``')'``, which are ignored. The string must not contain whitespace "
"between ``'+'``, ``'-'``, the ``'j'`` or ``'J'`` suffix, and the decimal "
"number. For example, ``complex('1+2j')`` is fine, but ``complex('1 + 2j')`` "
"raises :exc:`ValueError`. More precisely, the input must conform to the :"
"token:`~float:complexvalue` production rule in the following grammar, after "
"parentheses and leading and trailing whitespace characters are removed:"
msgstr ""
"Se l'argomento è una stringa, deve contenere o una parte reale (nello stesso "
"formato della funzione :func:`float`) o una parte immaginaria (nello stesso "
"formato ma con un suffisso ``'j'`` o ``'J'``), o entrambe le parti reali e "
"immaginarie (il segno della parte immaginaria è obbligatorio in questo "
"caso). La stringa può facoltativamente essere circondata da spazi bianchi e "
"dalle parentesi tonde ``'('`` e ``')'``, che vengono ignorate. La stringa "
"non deve contenere spazi bianchi tra ``'+'``, ``'-'``, il suffisso ``'j'`` o "
"``'J'`` e il numero decimale. Ad esempio, ``complex('1+2j')`` va bene, ma "
"``complex('1 + 2j')`` solleva un'eccezione :exc:`ValueError`. Più "
"precisamente, l'input deve conformarsi alla regola di produzione :token:"
"`~float:complexvalue` nella seguente grammatica, dopo che sono stati rimossi "
"le parentesi e i caratteri di spazio all'inizio e alla fine:"

#: library/functions.rst:422
msgid ""
"If the argument is a number, the constructor serves as a numeric conversion "
"like :class:`int` and :class:`float`. For a general Python object ``x``, "
"``complex(x)`` delegates to ``x.__complex__()``. If :meth:`~object."
"__complex__` is not defined then it falls back to :meth:`~object.__float__`. "
"If :meth:`!__float__` is not defined then it falls back to :meth:`~object."
"__index__`."
msgstr ""
"Se l'argomento è un numero, il costruttore funziona come una conversione "
"numerica come per :class:`int` e :class:`float`. Per un oggetto Python "
"generico ``x``, ``complex(x)`` delega a ``x.__complex__()``. Se :meth:"
"`~object.__complex__` non è definito, ricade su :meth:`~object.__float__`. "
"Se :meth:`!__float__` non è definito, ricade su :meth:`~object.__index__`."

#: library/functions.rst:431
msgid ""
"If two arguments are provided or keyword arguments are used, each argument "
"may be any numeric type (including complex). If both arguments are real "
"numbers, return a complex number with the real component *real* and the "
"imaginary component *imag*. If both arguments are complex numbers, return a "
"complex number with the real component ``real.real-imag.imag`` and the "
"imaginary component ``real.imag+imag.real``. If one of arguments is a real "
"number, only its real component is used in the above expressions."
msgstr ""
"Se vengono forniti due argomenti o si utilizzano argomenti chiave, ogni "
"argomento può essere di qualsiasi tipo numerico (incluso complesso). Se "
"entrambi gli argomenti sono numeri reali, restituisce un numero complesso "
"con la componente reale *real* e la componente immaginaria *imag*. Se "
"entrambi gli argomenti sono numeri complessi, restituire un numero complesso "
"con la componente reale ``real.real - imag.imag`` e la componente "
"immaginaria ``real.imag + imag.real``. Se uno degli argomenti è un numero "
"reale, viene utilizzata solo la sua componente reale nelle espressioni sopra."

#: library/functions.rst:441
msgid "If all arguments are omitted, returns ``0j``."
msgstr "Se tutti gli argomenti sono omessi, restituisce ``0j``."

#: library/functions.rst:443
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr "Il tipo complesso è descritto in :ref:`typesnumeric`."

#: library/functions.rst:771 library/functions.rst:1014
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr ""
"È consentito raggruppare le cifre con trattini bassi come nei letterali di "
"codice."

#: library/functions.rst:448
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__complex__` and :"
"meth:`~object.__float__` are not defined."
msgstr ""
"Ricade su :meth:`~object.__index__` se :meth:`~object.__complex__` e :meth:"
"`~object.__float__` non sono definiti."

#: library/functions.rst:455
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``. *name* "
"need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"Questo è un parente di :func:`setattr`. Gli argomenti sono un oggetto e una "
"stringa. La stringa deve essere il nome di uno degli attributi dell'oggetto. "
"La funzione elimina l'attributo denominato, a condizione che l'oggetto lo "
"permetta. Ad esempio, ``delattr(x, 'foobar')`` è equivalente a ``del x."
"foobar``. *name* non deve necessariamente essere un identificatore Python "
"(vedi :func:`setattr`)."

#: library/functions.rst:468
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this class."
msgstr ""
"Crea un nuovo dizionario. L'oggetto :class:`dict` è la classe del "
"dizionario. Vedi :class:`dict` e :ref:`typesmapping` per la documentazione "
"su questa classe."

#: library/functions.rst:471
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"Per altri contenitori vedere le classi integrate :class:`list`, :class:`set` "
"e :class:`tuple`, così come il modulo :mod:`collections`."

#: library/functions.rst:478
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""
"Senza argomenti, restituisce l'elenco dei nomi nell'attuale ambito locale. "
"Con un argomento, tenta di restituire un elenco di attributi validi per "
"quell'oggetto."

#: library/functions.rst:481
msgid ""
"If the object has a method named :meth:`~object.__dir__`, this method will "
"be called and must return the list of attributes. This allows objects that "
"implement a custom :func:`~object.__getattr__` or :func:`~object."
"__getattribute__` function to customize the way :func:`dir` reports their "
"attributes."
msgstr ""
"Se l'oggetto ha un metodo chiamato :meth:`~object.__dir__`, verrà chiamato e "
"deve restituire l'elenco degli attributi. Questo consente agli oggetti che "
"implementano una funzione personalizzata :func:`~object.__getattr__` o :func:"
"`~object.__getattribute__` di personalizzare il modo in cui :func:`dir` "
"riporta i loro attributi."

#: library/functions.rst:488
msgid ""
"If the object does not provide :meth:`~object.__dir__`, the function tries "
"its best to gather information from the object's :attr:`~object.__dict__` "
"attribute, if defined, and from its type object.  The resulting list is not "
"necessarily complete and may be inaccurate when the object has a custom :"
"func:`~object.__getattr__`."
msgstr ""
"Se l'oggetto non fornisce :meth:`~object.__dir__`, la funzione fa del suo "
"meglio per raccogliere informazioni dall'attributo :attr:`~object.__dict__` "
"dell'oggetto, se definito, e dal suo tipo di oggetto. L'elenco risultante "
"non è necessariamente completo e può essere inaccurato se l'oggetto ha una "
"funzione personalizzata :func:`~object.__getattr__`."

#: library/functions.rst:494
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""
"Il meccanismo predefinito di :func:`dir` si comporta diversamente con "
"diversi tipi di oggetti, poiché tenta di produrre le informazioni più "
"rilevanti, piuttosto che complete:"

#: library/functions.rst:498
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr ""
"Se l'oggetto è un oggetto modulo, l'elenco contiene i nomi degli attributi "
"del modulo."

#: library/functions.rst:501
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""
"Se l'oggetto è un oggetto di tipo o classe, l'elenco contiene i nomi dei "
"suoi attributi e, ricorsivamente, degli attributi delle sue basi."

#: library/functions.rst:504
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""
"Altrimenti, l'elenco contiene i nomi degli attributi dell'oggetto, i nomi "
"degli attributi della sua classe e, ricorsivamente, degli attributi delle "
"sue classi base."

#: library/functions.rst:508
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "L'elenco risultante è ordinato alfabeticamente. Ad esempio:"

#: library/functions.rst:528
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"Poiché :func:`dir` è fornito principalmente come praticità per l'uso in un "
"prompt interattivo, tenta di fornire un insieme di nomi interessante "
"piuttosto che un insieme definito rigorosamente o coerentemente, e il suo "
"comportamento dettagliato può cambiare tra le versioni. Ad esempio, gli "
"attributi delle metaclassi non sono nella lista dei risultati quando "
"l'argomento è una classe."

#: library/functions.rst:538
msgid ""
"Take two (non-complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating "
"point numbers the result is ``(q, a % b)``, where *q* is usually ``math."
"floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a % b`` "
"is very close to *a*, if ``a % b`` is non-zero it has the same sign as *b*, "
"and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"Prende due numeri (non complessi) come argomenti e restituisce una coppia di "
"numeri costituita dal loro quoziente e resto quando si usa la divisione "
"intera. Con tipi di operandi misti, si applicano le regole per gli operatori "
"aritmetici binari. Per gli interi, il risultato è lo stesso di ``(a // b, a "
"% b)``. Per i numeri in virgola mobile il risultato è ``(q, a % b)``, dove "
"*q* è solitamente ``math.floor(a / b)`` ma può essere 1 in meno di quello. "
"In ogni caso ``q * b + a % b`` è molto vicino a *a*, se ``a % b`` è diverso "
"da zero ha lo stesso segno di *b*, e ``0 <= abs(a % b) < abs(b)``."

#: library/functions.rst:550
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration. The :meth:"
"`~iterator.__next__` method of the iterator returned by :func:`enumerate` "
"returns a tuple containing a count (from *start* which defaults to 0) and "
"the values obtained from iterating over *iterable*."
msgstr ""
"Restituisce un oggetto enumerate. *iterable* deve essere una sequenza, un :"
"term:`iterator` o qualche altro oggetto che supporti l'iterazione. Il "
"metodo :meth:`~iterator.__next__` dell'iteratore restituito da :func:"
"`enumerate` restituisce una tupla contenente un conteggio (da *start* che "
"per impostazione predefinita è 0) e i valori ottenuti iterando su *iterable*."

#: library/functions.rst:562
msgid "Equivalent to::"
msgstr "Equivalente a::"

#: library/functions.rst:0
msgid "Parameters"
msgstr "Parametri"

#: library/functions.rst:574
msgid "A Python expression."
msgstr "Un'espressione Python."

#: library/functions.rst:578
msgid "The global namespace (default: ``None``)."
msgstr "Lo spazio dei nomi globale (predefinito: ``None``)."

#: library/functions.rst:582
msgid "The local namespace (default: ``None``)."
msgstr "Lo spazio dei nomi locale (predefinito: ``None``)."

#: library/functions.rst:0
msgid "Returns"
msgstr "Restituisce"

#: library/functions.rst:586
msgid "The result of the evaluated expression."
msgstr "Il risultato dell'espressione valutata."

#: library/functions.rst:0
msgid "raises"
msgstr "solleva"

#: library/functions.rst:587
msgid "Syntax errors are reported as exceptions."
msgstr "Gli errori di sintassi sono segnalati come eccezioni."

#: library/functions.rst:589
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed.  That way you can "
"control what builtins are available to the executed code by inserting your "
"own ``__builtins__`` dictionary into *globals* before passing it to :func:"
"`eval`.  If the *locals* dictionary is omitted it defaults to the *globals* "
"dictionary.  If both dictionaries are omitted, the expression is executed "
"with the *globals* and *locals* in the environment where :func:`eval` is "
"called.  Note, *eval()* does not have access to the :term:`nested scopes "
"<nested scope>` (non-locals) in the enclosing environment."
msgstr ""
"L'argomento *expression* viene interpretato e valutato come un'espressione "
"Python (tecnicamente parlando, una lista di condizioni) utilizzando i "
"dizionari *globals* e *locals* come namespace globale e locale. Se il "
"dizionario *globals* è presente e non contiene un valore per la chiave "
"``__builtins__``, viene inserito un riferimento al dizionario del modulo "
"built-in :mod:`builtins` sotto quella chiave prima di interpretare "
"l'espressione *expression*. In questo modo puoi controllare quali built-in "
"sono disponibili nel codice eseguito inserendo il tuo dizionario "
"``__builtins__`` in *globals* prima di passarlo a :func:`eval`. Se il "
"dizionario *locals* è omesso, si predefinisce al dizionario *globals*. Se "
"entrambi i dizionari sono omessi, l'espressione viene eseguita con i "
"*globals* e *locals* nell'ambiente in cui viene chiamata :func:`eval`. Nota, "
"*eval()* non ha accesso agli :term:`scopi annidati <nested scope>` (non-"
"locals) nell'ambiente circostante."

#: library/functions.rst:604
msgid "Example:"
msgstr "Esempio:"

#: library/functions.rst:610
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case, pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"Questa funzione può essere utilizzata anche per eseguire oggetti codice "
"arbitrari (come quelli creati da :func:`compile`). In questo caso, passa un "
"oggetto codice invece di una stringa. Se l'oggetto codice è stato compilato "
"con ``'exec'`` come argomento *mode*, il valore restituito da :func:`eval` "
"sarà ``None``."

#: library/functions.rst:615
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions return the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"Suggerimenti: l'esecuzione dinamica delle istruzioni è supportata dalla "
"funzione :func:`exec`. Le funzioni :func:`globals` e :func:`locals` "
"restituiscono rispettivamente il dizionario globale e locale corrente, che "
"possono essere utili da passare per l'uso da parte di :func:`eval` o :func:"
"`exec`."

#: library/functions.rst:620
msgid ""
"If the given source is a string, then leading and trailing spaces and tabs "
"are stripped."
msgstr ""
"Se la sorgente data è una stringa, allora gli spazi e le tabulazioni "
"iniziali e finali vengono rimossi."

#: library/functions.rst:623
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""
"Vedi :func:`ast.literal_eval` per una funzione che può valutare in sicurezza "
"stringhe con espressioni contenenti solo letterali."

#: library/functions.rst:671
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with argument "
"``code_object``."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``exec`` con argomento "
"``code_object``."

#: library/functions.rst:673
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with the code object as "
"the argument. Code compilation events may also be raised."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``exec`` con l'oggetto "
"codice come argomento. Possono anche essere sollevati eventi di compilazione "
"del codice."

#: library/functions.rst:635
msgid ""
"This function supports dynamic execution of Python code. *object* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section :ref:`file-input` in the Reference Manual). Be aware that the :"
"keyword:`nonlocal`, :keyword:`yield`,  and :keyword:`return` statements may "
"not be used outside of function definitions even within the context of code "
"passed to the :func:`exec` function. The return value is ``None``."
msgstr ""
"Questa funzione supporta l'esecuzione dinamica di codice Python. *object* "
"deve essere una stringa o un oggetto codice. Se è una stringa, la stringa "
"viene interpretata come una suite di dichiarazioni Python che vengono poi "
"eseguite (a meno che non si verifichi un errore di sintassi). [#]_ Se è un "
"oggetto codice, viene semplicemente eseguito. In tutti i casi, il codice che "
"viene eseguito deve essere valido come input di file (vedere la sezione :ref:"
"`file-input` nel Manuale di Riferimento). Tieni presente che le "
"dichiarazioni :keyword:`nonlocal`, :keyword:`yield` e :keyword:`return` non "
"possono essere utilizzate al di fuori delle definizioni di funzione, anche "
"nel contesto del codice passato alla funzione :func:`exec`. Il valore di "
"ritorno è ``None``."

#: library/functions.rst:646
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the "
"current scope.  If only *globals* is provided, it must be a dictionary (and "
"not a subclass of dictionary), which will be used for both the global and "
"the local variables.  If *globals* and *locals* are given, they are used for "
"the global and local variables, respectively.  If provided, *locals* can be "
"any mapping object.  Remember that at the module level, globals and locals "
"are the same dictionary."
msgstr ""
"In ogni caso, se vengono omesse le parti opzionali, il codice viene eseguito "
"nell'ambito corrente. Se viene fornito solo *globals*, deve essere un "
"dizionario (e non una sottoclasse del dizionario), che verrà utilizzato sia "
"per le variabili globali che per quelle locali. Se vengono forniti *globals* "
"e *locals*, vengono utilizzati rispettivamente per le variabili globali e "
"locali. Se fornito, *locals* può essere qualsiasi oggetto di mappatura. "
"Ricorda che a livello di modulo, globals e locals sono lo stesso dizionario."

#: library/functions.rst:656
msgid ""
"Most users should just pass a *globals* argument and never *locals*. If exec "
"gets two separate objects as *globals* and *locals*, the code will be "
"executed as if it were embedded in a class definition."
msgstr ""
"La maggior parte degli utenti dovrebbe semplicemente passare un argomento "
"*globals* e mai *locals*. Se exec riceve due oggetti separati come *globals* "
"e *locals*, il codice verrà eseguito come se fosse incorporato in una "
"definizione di classe."

#: library/functions.rst:660
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module :mod:"
"`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to :func:`exec`."
msgstr ""
"Se il dizionario *globals* non contiene un valore per la chiave "
"``__builtins__``, viene inserito un riferimento al dizionario del modulo "
"integrato :mod:`builtins` sotto quella chiave. In questo modo puoi "
"controllare quali builtins sono disponibili per il codice eseguito inserendo "
"il tuo dizionario ``__builtins__`` in *globals* prima di passarlo a :func:"
"`exec`."

#: library/functions.rst:666
msgid ""
"The *closure* argument specifies a closure--a tuple of cellvars. It's only "
"valid when the *object* is a code object containing free variables. The "
"length of the tuple must exactly match the number of free variables "
"referenced by the code object."
msgstr ""
"L'argomento *closure* specifica una chiusura--una tupla di cellvars. È "
"valido solo quando l'*oggetto* è un oggetto codice contenente variabili "
"libere. La lunghezza della tupla deve esattamente corrispondere al numero di "
"variabili libere referenziate dall'oggetto codice."

#: library/functions.rst:678
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current "
"global and local dictionary, respectively, which may be useful to pass "
"around for use as the second and third argument to :func:`exec`."
msgstr ""
"Le funzioni built-in :func:`globals` e :func:`locals` restituiscono il "
"dizionario globale e locale corrente, rispettivamente, il che può risultare "
"utile da passare come secondo e terzo argomento a :func:`exec`."

#: library/functions.rst:684
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""
"I *locals* predefiniti agiscono come descritto per la funzione :func:"
"`locals` qui sotto: non dovrebbero essere tentate modifiche al dizionario "
"*locals* predefinito. Passa un dizionario *locals* esplicito se hai bisogno "
"di vedere gli effetti del codice sui *locals* dopo che la funzione :func:"
"`exec` ha restituito."

#: library/functions.rst:689
msgid "Added the *closure* parameter."
msgstr "Aggiunto il parametro *closure*."

#: library/functions.rst:695
msgid ""
"Construct an iterator from those elements of *iterable* for which *function* "
"is true.  *iterable* may be either a sequence, a container which supports "
"iteration, or an iterator.  If *function* is ``None``, the identity function "
"is assumed, that is, all elements of *iterable* that are false are removed."
msgstr ""
"Costruisce un iteratore dagli elementi di *iterable* per i quali *function* "
"è vera. *iterable* può essere una sequenza, un contenitore che supporta "
"l'iterazione, o un iteratore. Se *function* è ``None``, si assume la "
"funzione identità, ovvero, tutti gli elementi di *iterable* che sono falsi "
"vengono rimossi."

#: library/functions.rst:701
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"Nota che ``filter(function, iterable)`` è equivalente all'espressione "
"generatrice ``(item for item in iterable if function(item))`` se function "
"non è ``None`` e ``(item for item in iterable if item)`` se function è "
"``None``."

#: library/functions.rst:706
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* is false."
msgstr ""
"Vedi :func:`itertools.filterfalse` per la funzione complementare che "
"restituisce elementi di *iterable* per i quali *function* è falsa."

#: library/functions.rst:717
msgid "Return a floating point number constructed from a number or a string."
msgstr ""
"Restituisce un numero in virgola mobile costruito da un numero o una stringa."

#: library/functions.rst:734
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or positive or negative infinity. More precisely, the input must "
"conform to the :token:`~float:floatvalue` production rule in the following "
"grammar, after leading and trailing whitespace characters are removed:"
msgstr ""
"Se l'argomento è una stringa, dovrebbe contenere un numero decimale, "
"facoltativamente preceduto da un segno, e facoltativamente incorporato in "
"spazi bianchi. Il segno facoltativo può essere ``'+'`` o ``'-'``; un segno "
"``'+'`` non ha effetto sul valore prodotto. L'argomento può anche essere una "
"stringa che rappresenta un NaN (not-a-number), o infinito positivo o "
"negativo. Più precisamente, l'input deve conformarsi alla regola di "
"produzione :token:`~float:floatvalue` nella seguente grammatica, dopo che "
"sono stati rimossi i caratteri di spazio all'inizio e alla fine:"

#: library/functions.rst:755
msgid ""
"Case is not significant, so, for example, \"inf\", \"Inf\", \"INFINITY\", "
"and \"iNfINity\" are all acceptable spellings for positive infinity."
msgstr ""
"La distinzione tra maiuscole e minuscole non è significativa, quindi, per "
"esempio, \"inf\", \"Inf\", \"INFINITY\" e \"iNfINity\" sono tutte ortografie "
"accettabili per l'infinito positivo."

#: library/functions.rst:758
msgid ""
"Otherwise, if the argument is an integer or a floating point number, a "
"floating point number with the same value (within Python's floating point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"In caso contrario, se l'argomento è un numero intero o a virgola mobile, "
"viene restituito un numero a virgola mobile con lo stesso valore (entro la "
"precisione dei numeri a virgola mobile di Python). Se l'argomento è al di "
"fuori del range di un float di Python, viene sollevata un'eccezione :exc:"
"`OverflowError`."

#: library/functions.rst:763
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to ``x."
"__float__()``.  If :meth:`~object.__float__` is not defined then it falls "
"back to :meth:`~object.__index__`."
msgstr ""
"Per un oggetto Python generico ``x``, ``float(x)`` si delega a ``x."
"__float__()``. Se :meth:`~object.__float__` non è definito, si ritorna a :"
"meth:`~object.__index__`."

#: library/functions.rst:767
msgid "If no argument is given, ``0.0`` is returned."
msgstr "Se non viene fornito alcun argomento, viene restituito ``0.0``."

#: library/functions.rst:769
msgid "The float type is described in :ref:`typesnumeric`."
msgstr "Il tipo float è descritto in :ref:`typesnumeric`."

#: library/functions.rst:777
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__float__` is not "
"defined."
msgstr ""
"Ritorna a :meth:`~object.__index__` se :meth:`~object.__float__` non è "
"definito."

#: library/functions.rst:787
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument; however, there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"Converte un *value* in una rappresentazione \"formattata\", come controllato "
"da *format_spec*. L'interpretazione di *format_spec* dipenderà dal tipo "
"dell'argomento *value*; tuttavia, esiste una sintassi di formattazione "
"standard utilizzata dalla maggior parte dei tipi integrati: :ref:"
"`formatspec`."

#: library/functions.rst:792
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr ""
"Il *format_spec* predefinito è una stringa vuota che di solito dà lo stesso "
"effetto di una chiamata a :func:`str(value) <str>`."

#: library/functions.rst:795
msgid ""
"A call to ``format(value, format_spec)`` is translated to ``type(value)."
"__format__(value, format_spec)`` which bypasses the instance dictionary when "
"searching for the value's :meth:`~object.__format__` method. A :exc:"
"`TypeError` exception is raised if the method search reaches :mod:`object` "
"and the *format_spec* is non-empty, or if either the *format_spec* or the "
"return value are not strings."
msgstr ""
"Una chiamata a ``format(value, format_spec)`` viene tradotta in "
"``type(value).__format__(value, format_spec)`` che bypassa il dizionario "
"dell'istanza quando si cerca il metodo :meth:`~object.__format__` del "
"valore. Viene sollevata un'eccezione :exc:`TypeError` se la ricerca del "
"metodo raggiunge :mod:`object` e *format_spec* non è vuoto, o se "
"*format_spec* o il valore restituito non sono stringhe."

#: library/functions.rst:802
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"``object().__format__(format_spec)`` solleva :exc:`TypeError` se "
"*format_spec* non è una stringa vuota."

#: library/functions.rst:811
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and :"
"ref:`types-set` for documentation about this class."
msgstr ""
"Restituisce un nuovo oggetto :class:`frozenset`, opzionalmente con elementi "
"tratti da *iterable*. ``frozenset`` è una classe integrata. Vedi :class:"
"`frozenset` e :ref:`types-set` per la documentazione su questa classe."

#: library/functions.rst:815
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, :class:"
"`tuple`, and :class:`dict` classes, as well as the :mod:`collections` module."
msgstr ""
"Per altri contenitori vedere le classi integrate :class:`set`, :class:"
"`list`, :class:`tuple` e :class:`dict`, così come il modulo :mod:"
"`collections`."

#: library/functions.rst:823
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is "
"raised. *name* need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"Restituisce il valore dell'attributo nominato di *object*. *name* deve "
"essere una stringa. Se la stringa è il nome di uno degli attributi "
"dell'oggetto, il risultato è il valore di quell'attributo. Ad esempio, "
"``getattr(x, 'foobar')`` è equivalente a ``x.foobar``. Se l'attributo "
"nominato non esiste, viene restituito *default* se fornito, altrimenti viene "
"sollevata un'eccezione :exc:`AttributeError`. *name* non deve "
"necessariamente essere un identificatore Python (vedi :func:`setattr`)."

#: library/functions.rst:832
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to retrieve it with :func:"
"`getattr`."
msgstr ""
"Poiché il :ref:`private name mangling <private-name-mangling>` avviene al "
"momento della compilazione, è necessario manipolare manualmente il nome di "
"un attributo privato (attributi con due underscore iniziali) per recuperarlo "
"con :func:`getattr`."

#: library/functions.rst:840
msgid ""
"Return the dictionary implementing the current module namespace. For code "
"within functions, this is set when the function is defined and remains the "
"same regardless of where the function is called."
msgstr ""
"Restituisce il dizionario che implementa lo spazio dei nomi del modulo "
"corrente. Per il codice all'interno delle funzioni, questo viene impostato "
"quando la funzione è definita e rimane lo stesso indipendentemente da dove "
"la funzione viene chiamata."

#: library/functions.rst:847
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an :exc:`AttributeError` or not.)"
msgstr ""
"Gli argomenti sono un oggetto e una stringa. Il risultato è ``True`` se la "
"stringa è il nome di uno degli attributi dell'oggetto, ``False`` se non lo "
"è. (Questo è implementato chiamando ``getattr(object, name)`` e verificando "
"se solleva un'eccezione :exc:`AttributeError` o meno.)"

#: library/functions.rst:855
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"Restituisce il valore hash dell'oggetto (se ne ha uno). I valori hash sono "
"interi. Vengono utilizzati per confrontare rapidamente le chiavi del "
"dizionario durante una ricerca nel dizionario. I valori numerici che "
"risultano uguali hanno lo stesso valore hash (anche se sono di tipi diversi, "
"come nel caso di 1 e 1.0)."

#: library/functions.rst:862
msgid ""
"For objects with custom :meth:`~object.__hash__` methods, note that :func:"
"`hash` truncates the return value based on the bit width of the host machine."
msgstr ""
"Per gli oggetti con metodi personalizzati :meth:`~object.__hash__`, si noti "
"che :func:`hash` tronca il valore restituito in base alla larghezza di bit "
"della macchina ospite."

#: library/functions.rst:869
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""
"Avvia il sistema di aiuto integrato. (Questa funzione è destinata all'uso "
"interattivo.) Se non viene fornito alcun argomento, il sistema di aiuto "
"interattivo si avvia sulla console dell'interprete. Se l'argomento è una "
"stringa, la stringa viene cercata come nome di un modulo, funzione, classe, "
"metodo, parola chiave o argomento della documentazione, e viene stampata una "
"pagina di aiuto sulla console. Se l'argomento è di qualsiasi altro tipo di "
"oggetto, viene generata una pagina di aiuto sull'oggetto."

#: library/functions.rst:876
msgid ""
"Note that if a slash(/) appears in the parameter list of a function when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"Si noti che se appare una barra (/) nell'elenco dei parametri di una "
"funzione quando si invoca :func:`help`, significa che i parametri precedenti "
"alla barra sono solo posizionali. Per ulteriori informazioni, vedere :ref:"
"`la FAQ sugli argomenti solo posizionali <faq-positional-only-arguments>`."

#: library/functions.rst:881
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr ""
"Questa funzione viene aggiunta allo spazio dei nomi integrato dal modulo :"
"mod:`site`."

#: library/functions.rst:883
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures "
"for callables are now more comprehensive and consistent."
msgstr ""
"Le modifiche a :mod:`pydoc` e :mod:`inspect` significano che le firme "
"riportate per gli oggetti invocabili sono ora più complete e coerenti."

#: library/functions.rst:890
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an :"
"meth:`~object.__index__` method that returns an integer. Some examples:"
msgstr ""
"Converte un numero intero in una stringa esadecimale in minuscolo con "
"prefisso \"0x\". Se *x* non è un oggetto :class:`int` di Python, deve "
"definire un metodo :meth:`~object.__index__` che ritorna un intero. Alcuni "
"esempi:"

#: library/functions.rst:899
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr ""
"Se si desidera convertire un numero intero in una stringa esadecimale "
"maiuscola o minuscola con prefisso o meno, è possibile utilizzare uno dei "
"seguenti modi:"

#: library/functions.rst:911
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using "
"a base of 16."
msgstr ""
"Vedi anche :func:`int` per convertire una stringa esadecimale in un numero "
"intero utilizzando una base di 16."

#: library/functions.rst:916
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""
"Per ottenere una rappresentazione in stringa esadecimale di un float, "
"utilizzare il metodo :meth:`float.hex`."

#: library/functions.rst:922
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"Restituisce \"l'identità\" di un oggetto. Questo è un numero intero che è "
"garantito essere unico e costante per questo oggetto durante la sua vita. "
"Due oggetti con vite non sovrapposte possono avere lo stesso valore di :func:"
"`id`."

#: library/functions.rst:927
msgid "This is the address of the object in memory."
msgstr "Questo è l'indirizzo dell'oggetto in memoria."

#: library/functions.rst:929
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.id`` with argument "
"``id``."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``builtins.id`` con "
"l'argomento ``id``."

#: library/functions.rst:935
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"Se l'argomento *prompt* è presente, viene scritto nello standard output "
"senza un a capo finale. La funzione legge quindi una riga dall'input, la "
"converte in una stringa (eliminando il newline finale) e la restituisce. "
"Quando EOF viene letto, viene sollevata l'eccezione :exc:`EOFError`. "
"Esempio::"

#: library/functions.rst:945
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""
"Se il modulo :mod:`readline` è stato caricato, allora :func:`input` lo "
"utilizzerà per fornire funzionalità di modifica elaborata delle righe e "
"cronologia."

#: library/functions.rst:948
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt``."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``builtins.input`` con "
"l'argomento ``prompt``."

#: library/functions.rst:950
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt`` before reading input"
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``builtins.input`` con "
"l'argomento ``prompt`` prima di leggere l'input."

#: library/functions.rst:953
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"argument ``result``."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``builtins.input/result`` "
"con l'argomento ``result``."

#: library/functions.rst:955
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"the result after successfully reading input."
msgstr ""
"Solleva un :ref:`evento di auditing <auditing>` ``builtins.input/result`` "
"con il risultato dopo aver letto l'input con successo."

#: library/functions.rst:962
msgid ""
"Return an integer object constructed from a number or a string, or return "
"``0`` if no arguments are given."
msgstr ""
"Restituisce un oggetto intero costruito da un numero o una stringa, o "
"restituisce ``0`` se non vengono forniti argomenti."

#: library/functions.rst:982
msgid ""
"If the argument defines :meth:`~object.__int__`, ``int(x)`` returns ``x."
"__int__()``.  If the argument defines :meth:`~object.__index__`, it returns "
"``x.__index__()``.  If the argument defines :meth:`~object.__trunc__`, it "
"returns ``x.__trunc__()``. For floating point numbers, this truncates "
"towards zero."
msgstr ""
"Se l'argomento definisce :meth:`~object.__int__`, ``int(x)`` restituisce ``x."
"__int__()``. Se l'argomento definisce :meth:`~object.__index__`, restituisce "
"``x.__index__()``. Se l'argomento definisce :meth:`~object.__trunc__`, "
"restituisce ``x.__trunc__()``. Per i numeri in virgola mobile, questo tronca "
"verso zero."

#: library/functions.rst:988
msgid ""
"If the argument is not a number or if *base* is given, then it must be a "
"string, :class:`bytes`, or :class:`bytearray` instance representing an "
"integer in radix *base*.  Optionally, the string can be preceded by ``+`` or "
"``-`` (with no space in between), have leading zeros, be surrounded by "
"whitespace, and have single underscores interspersed between digits."
msgstr ""
"Se l'argomento non è un numero o se *base* è fornito, allora deve essere una "
"stringa, un'istanza di :class:`bytes` o di :class:`bytearray` che "
"rappresenta un intero in base *base*. Facoltativamente, la stringa può "
"essere preceduta da ``+`` o ``-`` (senza spazio in mezzo), avere zeri di "
"fronte, essere circondata da spazi bianchi e avere trattini bassi "
"intercalati tra le cifre."

#: library/functions.rst:994
msgid ""
"A base-n integer string contains digits, each representing a value from 0 to "
"n-1. The values 0--9 can be represented by any Unicode decimal digit. The "
"values 10--35 can be represented by ``a`` to ``z`` (or ``A`` to ``Z``). The "
"default *base* is 10. The allowed bases are 0 and 2--36. Base-2, -8, and -16 "
"strings can be optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or "
"``0x``/``0X``, as with integer literals in code.  For base 0, the string is "
"interpreted in a similar way to an :ref:`integer literal in code "
"<integers>`, in that the actual base is 2, 8, 10, or 16 as determined by the "
"prefix. Base 0 also disallows leading zeros: ``int('010', 0)`` is not legal, "
"while ``int('010')`` and ``int('010', 8)`` are."
msgstr ""
"Una stringa intera in base-n contiene cifre, ciascuna rappresentante un "
"valore da 0 a n-1. I valori 0-9 possono essere rappresentati da qualsiasi "
"cifra decimale Unicode. I valori 10-35 possono essere rappresentati da ``a`` "
"a ``z`` (o ``A`` a ``Z``). La base predefinita è 10. Le basi consentite sono "
"0 e 2-36. Le stringhe in base 2, 8 e 16 possono essere opzionalmente "
"precedute dai prefissi ``0b``/``0B``, ``0o``/``0O`` o ``0x``/``0X``, come "
"con i letterali interi nel codice. Per la base 0, la stringa viene "
"interpretata in modo simile a un :ref:`letterale intero nel codice "
"<integers>`, nel senso che la base effettiva è 2, 8, 10 o 16 come "
"determinato dal prefisso. La base 0 disabilita anche gli zeri iniziali: "
"``int('010', 0)`` non è legale, mentre ``int('010')`` e ``int('010', 8)`` lo "
"sono."

#: library/functions.rst:1005
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "Il tipo di intero è descritto in :ref:`typesnumeric`."

#: library/functions.rst:1007
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a :"
"meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"Se *base* non è un'istanza di :class:`int` e l'oggetto *base* ha un metodo :"
"meth:`base.__index__ <object.__index__>`, quel metodo viene chiamato per "
"ottenere un intero per la base. Le versioni precedenti usavano :meth:`base."
"__int__ <object.__int__>` invece di :meth:`base.__index__ <object."
"__index__>`."

#: library/functions.rst:1017
msgid "The first parameter is now positional-only."
msgstr "Il primo parametro ora è solo posizionale."

#: library/functions.rst:1020
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__int__` is not "
"defined."
msgstr ""
"Ritorna a :meth:`~object.__index__` se :meth:`~object.__int__` non è "
"definito."

#: library/functions.rst:1023
msgid "The delegation to :meth:`~object.__trunc__` is deprecated."
msgstr "La delega a :meth:`~object.__trunc__` è deprecata."

#: library/functions.rst:1026
msgid ""
":class:`int` string inputs and string representations can be limited to help "
"avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the :"
"ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
"Gli input stringa e le rappresentazioni stringa della classe :class:`int` "
"possono essere limitati per evitare attacchi denial of service. Viene "
"sollevata un'eccezione :exc:`ValueError` quando il limite viene superato "
"mentre si converte una stringa in un :class:`int` o quando la conversione di "
"un :class:`int` in una stringa supera il limite. Vedi la documentazione :ref:"
"`limitazione della lunghezza della stringa di conversione intera "
"<int_max_str_digits>`."

#: library/functions.rst:1036
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect, or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples) or a :ref:`types-union` of "
"multiple types, return ``True`` if *object* is an instance of any of the "
"types. If *classinfo* is not a type or tuple of types and such tuples, a :"
"exc:`TypeError` exception is raised. :exc:`TypeError` may not be raised for "
"an invalid type if an earlier check succeeds."
msgstr ""
"Restituisce ``True`` se l'argomento *object* è un'istanza dell'argomento "
"*classinfo*, o di una sua sottoclasse (diretta, indiretta o :term:`virtual "
"<abstract base class>`). Se *object* non è un oggetto di quel tipo, la "
"funzione restituisce sempre ``False``. Se *classinfo* è una tupla di oggetti "
"di tipo (o ricorsivamente, altre tuple di questo tipo) o una :ref:`types-"
"union` di più tipi, restituisce ``True`` se *object* è un'istanza di uno "
"qualsiasi dei tipi. Se *classinfo* non è un tipo o una tupla di tipi e tali "
"tuple, viene sollevata un'eccezione :exc:`TypeError`. :exc:`TypeError` può "
"non essere sollevata per un tipo non valido se un controllo precedente ha "
"successo."

#: library/functions.rst:1061
msgid "*classinfo* can be a :ref:`types-union`."
msgstr "*classinfo* può essere una :ref:`types-union`."

#: library/functions.rst:1053
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect, or :term:"
"`virtual <abstract base class>`) of *classinfo*.  A class is considered a "
"subclass of itself. *classinfo* may be a tuple of class objects (or "
"recursively, other such tuples) or a :ref:`types-union`, in which case "
"return ``True`` if *class* is a subclass of any entry in *classinfo*.  In "
"any other case, a :exc:`TypeError` exception is raised."
msgstr ""
"Restituisce ``True`` se *class* è una sottoclasse (diretta, indiretta o :"
"term:`virtual <abstract base class>`) di *classinfo*. Una classe è "
"considerata una sottoclasse di se stessa. *classinfo* può essere una tupla "
"di oggetti di classe (o ricorsivamente, altre tuple di questo tipo) o una :"
"ref:`types-union`, nel qual caso restituisce ``True`` se *class* è una "
"sottoclasse di uno qualsiasi degli elementi in *classinfo*. In ogni altro "
"caso, viene sollevata un'eccezione :exc:`TypeError`."

#: library/functions.rst:1068
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the :"
"term:`iterable` protocol (the :meth:`~object.__iter__` method), or it must "
"support the sequence protocol (the :meth:`~object.__getitem__` method with "
"integer arguments starting at ``0``).  If it does not support either of "
"those protocols, :exc:`TypeError` is raised. If the second argument, "
"*sentinel*, is given, then *object* must be a callable object.  The iterator "
"created in this case will call *object* with no arguments for each call to "
"its :meth:`~iterator.__next__` method; if the value returned is equal to "
"*sentinel*, :exc:`StopIteration` will be raised, otherwise the value will be "
"returned."
msgstr ""
"Restituisce un oggetto :term:`iterator`. Il primo argomento è interpretato "
"in modo molto diverso a seconda della presenza del secondo argomento. Senza "
"un secondo argomento, *object* deve essere un oggetto di raccolta che "
"supporta il protocollo :term:`iterable` (il metodo :meth:`~object."
"__iter__`), oppure deve supportare il protocollo della sequenza (il metodo :"
"meth:`~object.__getitem__` con argomenti interi a partire da ``0``). Se non "
"supporta nessuno di questi protocolli, viene sollevata un'eccezione :exc:"
"`TypeError`. Se il secondo argomento, *sentinel*, è dato, allora *object* "
"deve essere un oggetto callable. L'iteratore creato in questo caso chiamerà "
"*object* senza argomenti per ogni chiamata al suo metodo :meth:`~iterator."
"__next__`; se il valore restituito è uguale a *sentinel*, viene sollevata "
"un'eccezione :exc:`StopIteration`, altrimenti il valore verrà restituito."

#: library/functions.rst:1082
msgid "See also :ref:`typeiter`."
msgstr "Vedi anche :ref:`typeiter`."

#: library/functions.rst:1084
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database "
"file until the end of file is reached::"
msgstr ""
"Una applicazione utile della seconda forma di :func:`iter` è costruire un "
"lettore di blocchi. Ad esempio, leggere blocchi a larghezza fissa da un file "
"di database binario fino a raggiungere la fine del file::"

#: library/functions.rst:1096
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"Restituisce la lunghezza (il numero di elementi) di un oggetto. L'argomento "
"può essere una sequenza (come una stringa, bytes, tuple, list o range) o una "
"collezione (come un dizionario, set o frozenset)."

#: library/functions.rst:1102
msgid ""
"``len`` raises :exc:`OverflowError` on lengths larger than :data:`sys."
"maxsize`, such as :class:`range(2 ** 100) <range>`."
msgstr ""
"``len`` solleva :exc:`OverflowError` su lunghezze maggiori di :data:`sys."
"maxsize`, come :class:`range(2 ** 100) <range>`."

#: library/functions.rst:1111
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
"Piuttosto che essere una funzione, :class:`list` è effettivamente un tipo di "
"sequenza mutabile, come documentato in :ref:`typesseq-list` e :ref:"
"`typesseq`."

#: library/functions.rst:1117
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks. Note that at the module level, :func:"
"`locals` and :func:`globals` are the same dictionary."
msgstr ""
"Aggiorna e restituisce un dizionario che rappresenta la tabella dei simboli "
"locali corrente. Le variabili libere vengono restituite da :func:`locals` "
"quando viene chiamato nei blocchi funzione, ma non nei blocchi di classe. "
"Nota che a livello di modulo, :func:`locals` e :func:`globals` sono lo "
"stesso dizionario."

#: library/functions.rst:1123
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr ""
"Il contenuto di questo dizionario non dovrebbe essere modificato; le "
"modifiche potrebbero non influenzare i valori delle variabili locali e "
"libere utilizzate dall'interprete."

#: library/functions.rst:1128
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterables* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when "
"the shortest iterable is exhausted.  For cases where the function inputs are "
"already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"Restituisce un iteratore che applica *funzione* a ogni elemento di "
"*iterabile*, producendo i risultati. Se vengono forniti ulteriori argomenti "
"*iterable*, *function* deve prendere altrettanti argomenti ed è applicata "
"agli elementi di tutti gli iterabili in parallelo. Con più iterabili, "
"l'iteratore si ferma quando l'iterabile più corto è esaurito. Per i casi in "
"cui gli input della funzione sono già disposti in tuple di argomenti, "
"vedere :func:`itertools.starmap`\\."

#: library/functions.rst:1140
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""
"Restituisce l'elemento più grande in un iterabile o il più grande tra due o "
"più argomenti."

#: library/functions.rst:1143
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"Se viene fornito un solo argomento posizionale, dovrebbe essere un :term:"
"`iterable`. Viene restituito l'elemento più grande dell'iterabile. Se "
"vengono forniti due o più argomenti posizionali, viene restituito il più "
"grande degli argomenti posizionali."

#: library/functions.rst:1186
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is "
"empty. If the iterable is empty and *default* is not provided, a :exc:"
"`ValueError` is raised."
msgstr ""
"Ci sono due argomenti opzionali solo per parole chiave. L'argomento *key* "
"specifica una funzione di ordinamento a un argomento, come quella utilizzata "
"per :meth:`list.sort`. L'argomento *default* specifica un oggetto da "
"restituire se l'iterabile fornito è vuoto. Se l'iterabile è vuoto e "
"*default* non è fornito, viene sollevata una :exc:`ValueError`."

#: library/functions.rst:1154
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and ``heapq."
"nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"Se ci sono più elementi massimali, la funzione restituisce il primo che "
"incontra. Questo è coerente con altri strumenti che preservano la stabilità "
"dell'ordinamento come ``sorted(iterable, key=keyfunc, reverse=True)[0]`` e "
"``heapq.nlargest(1, iterable, key=keyfunc)``."

#: library/functions.rst:1197
msgid "Added the *default* keyword-only parameter."
msgstr "Aggiunto il parametro *default* solo per parole chiave."

#: library/functions.rst:1200
msgid "The *key* can be ``None``."
msgstr "L'argomento *key* può essere ``None``."

#: library/functions.rst:1170
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""
"Restituisce un oggetto \"memory view\" creato dall'argomento fornito. Vedi :"
"ref:`typememoryview` per ulteriori informazioni."

#: library/functions.rst:1178
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""
"Restituisce l'elemento più piccolo in un iterabile o il più piccolo tra due "
"o più argomenti."

#: library/functions.rst:1181
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is returned."
msgstr ""
"Se viene fornito un solo argomento posizionale, dovrebbe essere un :term:"
"`iterable`. Viene restituito l'elemento più piccolo dell'iterabile. Se "
"vengono forniti due o più argomenti posizionali, viene restituito il più "
"piccolo degli argomenti posizionali."

#: library/functions.rst:1192
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"Se ci sono più elementi minimi, la funzione restituisce il primo che "
"incontra. Questo è coerente con altri strumenti che preservano la stabilità "
"dell'ordinamento come ``sorted(iterable, key=keyfunc)[0]`` e ``heapq."
"nsmallest(1, iterable, key=keyfunc)``."

#: library/functions.rst:1207
msgid ""
"Retrieve the next item from the :term:`iterator` by calling its :meth:"
"`~iterator.__next__` method.  If *default* is given, it is returned if the "
"iterator is exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
"Recupera l'elemento successivo dall':term:`iterator` chiamando il suo "
"metodo :meth:`~iterator.__next__`. Se viene fornito *default*, esso viene "
"restituito se l'iteratore è esaurito, altrimenti viene sollevata "
"l'eccezione :exc:`StopIteration`."

#: library/functions.rst:1214
msgid ""
"Return a new featureless object.  :class:`object` is a base for all classes. "
"It has methods that are common to all instances of Python classes.  This "
"function does not accept any arguments."
msgstr ""
"Restituisce un nuovo oggetto senza caratteristiche. :class:`object` è una "
"base per tutte le classi. Ha metodi comuni a tutte le istanze delle classi "
"Python. Questa funzione non accetta alcun argomento."

#: library/functions.rst:1220
msgid ""
":class:`object` does *not* have a :attr:`~object.__dict__`, so you can't "
"assign arbitrary attributes to an instance of the :class:`object` class."
msgstr ""
":class:`object` non ha un :attr:`~object.__dict__`, quindi non puoi "
"assegnare attributi arbitrari a un'istanza della classe :class:`object`."

#: library/functions.rst:1226
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`~object.__index__` method that returns an "
"integer. For example:"
msgstr ""
"Converte un numero intero in una stringa ottale preceduta da \"0o\". Il "
"risultato è un'istruzione valida in Python. Se *x* non è un oggetto Python :"
"class:`int`, deve definire un metodo :meth:`~object.__index__` che "
"restituisce un intero. Ad esempio:"

#: library/functions.rst:1236
msgid ""
"If you want to convert an integer number to an octal string either with the "
"prefix \"0o\" or not, you can use either of the following ways."
msgstr ""
"Se vuoi convertire un numero intero in una stringa ottale con o senza il "
"prefisso \"0o\", puoi usare uno dei seguenti modi."

#: library/functions.rst:1253
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised. See :ref:`tut-files` for more "
"examples of how to use this function."
msgstr ""
"Apre *file* e restituisce un corrispondente :term:`file object`. Se il file "
"non può essere aperto, viene sollevata un'eccezione :exc:`OSError`. Vedi :"
"ref:`tut-files` per ulteriori esempi su come utilizzare questa funzione."

#: library/functions.rst:1257
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is "
"given, it is closed when the returned I/O object is closed unless *closefd* "
"is set to ``False``.)"
msgstr ""
"*file* è un :term:`path-like object` che fornisce il percorso (assoluto o "
"relativo alla directory di lavoro corrente) del file da aprire o un "
"descrittore del file intero del file da incapsulare. (Se viene fornito un "
"file descriptor, esso viene chiuso quando l'oggetto I/O restituito viene "
"chiuso, a meno che *closefd* non sia impostato su ``False``.)"

#: library/functions.rst:1263
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation, and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform-dependent: :func:"
"`locale.getencoding()` is called to get the current locale encoding. (For "
"reading and writing raw bytes use binary mode and leave *encoding* "
"unspecified.)  The available modes are:"
msgstr ""
"*mode* è una stringa opzionale che specifica il modo in cui il file viene "
"aperto. Il valore predefinito è ``'r'``, che significa aprire per la lettura "
"in modalità testo. Altri valori comuni sono ``'w'`` per la scrittura "
"(troncando il file se esiste già), ``'x'`` per la creazione esclusiva e "
"``'a'`` per l'aggiunta (che su *alcuni* sistemi Unix significa che *tutte* "
"le scritture vengono aggiunte alla fine del file indipendentemente dalla "
"posizione corrente del seek). In modalità testo, se *encoding* non è "
"specificato, la codifica usata dipende dal sistema: viene chiamata :func:"
"`locale.getencoding()` per ottenere la codifica locale corrente. (Per "
"leggere e scrivere byte grezzi, usare la modalità binaria e lasciare "
"*encoding* non specificato.) I modi disponibili sono:"

#: library/functions.rst:1280
msgid "Character"
msgstr "Carattere"

#: library/functions.rst:1280
msgid "Meaning"
msgstr "Significato"

#: library/functions.rst:1282
msgid "``'r'``"
msgstr "``'r'``"

#: library/functions.rst:1282
msgid "open for reading (default)"
msgstr "apri per lettura (predefinito)"

#: library/functions.rst:1283
msgid "``'w'``"
msgstr "``'w'``"

#: library/functions.rst:1283
msgid "open for writing, truncating the file first"
msgstr "apri per scrittura, troncando prima il file"

#: library/functions.rst:1284
msgid "``'x'``"
msgstr "``'x'``"

#: library/functions.rst:1284
msgid "open for exclusive creation, failing if the file already exists"
msgstr "apri per creazione esclusiva, fallendo se il file esiste già"

#: library/functions.rst:1285
msgid "``'a'``"
msgstr "``'a'``"

#: library/functions.rst:1285
msgid "open for writing, appending to the end of file if it exists"
msgstr "apri per scrittura, aggiungendo alla fine del file se esiste"

#: library/functions.rst:1286
msgid "``'b'``"
msgstr "``'b'``"

#: library/functions.rst:1430
msgid "binary mode"
msgstr "modalità binaria"

#: library/functions.rst:1287
msgid "``'t'``"
msgstr "``'t'``"

#: library/functions.rst:1287
msgid "text mode (default)"
msgstr "modalità testo (predefinito)"

#: library/functions.rst:1288
msgid "``'+'``"
msgstr "``'+'``"

#: library/functions.rst:1288
msgid "open for updating (reading and writing)"
msgstr "apri per aggiornamento (lettura e scrittura)"

#: library/functions.rst:1291
msgid ""
"The default mode is ``'r'`` (open for reading text, a synonym of ``'rt'``). "
"Modes ``'w+'`` and ``'w+b'`` open and truncate the file.  Modes ``'r+'`` and "
"``'r+b'`` open the file with no truncation."
msgstr ""
"Il modo predefinito è ``'r'`` (aperto per la lettura di testo, sinonimo di "
"``'rt'``). I modi ``'w+'`` e ``'w+b'`` aprono il file e lo troncano. I modi "
"``'r+'`` e ``'r+b'`` aprono il file senza troncamento."

#: library/functions.rst:1295
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
"Come menzionato nella :ref:`io-overview`, Python distingue tra I/O binario e "
"di testo. I file aperti in modalità binaria (incluso ``'b'`` nell'argomento "
"*mode*) restituiscono il contenuto come oggetti :class:`bytes` senza alcuna "
"decodifica. In modalità testo (la predefinita, o quando ``'t'`` è incluso "
"nell'argomento *mode*), il contenuto del file è restituito come :class:"
"`str`, con i byte decodificati utilizzando una codifica dipendente dalla "
"piattaforma o quella specificata dall'opzione *encoding* se fornita."

#: library/functions.rst:1305
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr ""
"Python non dipende dalla nozione di file di testo del sistema operativo "
"sottostante; tutta l'elaborazione è fatta da Python stesso e quindi è "
"indipendente dalla piattaforma."

#: library/functions.rst:1309
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable when writing in text mode), and an integer > 1 to "
"indicate the size in bytes of a fixed-size chunk buffer. Note that "
"specifying a buffer size this way applies for binary buffered I/O, but "
"``TextIOWrapper`` (i.e., files opened with ``mode='r+'``) would have another "
"buffering. To disable buffering in ``TextIOWrapper``, consider using the "
"``write_through`` flag for :func:`io.TextIOWrapper.reconfigure`. When no "
"*buffering* argument is given, the default buffering policy works as follows:"
msgstr ""
"*buffering* è un intero opzionale utilizzato per impostare la politica di "
"buffering. Passa 0 per disattivare il buffering (consentito solo in modalità "
"binaria), 1 per selezionare il line buffering (utilizzabile solo durante la "
"scrittura in modalità testo) e un intero > 1 per indicare la dimensione in "
"byte di un buffer a dimensione fissa. Nota che specificare una dimensione "
"del buffer in questo modo si applica per I/O binario bufferizzato, ma "
"``TextIOWrapper`` (cioè, i file aperti con ``mode='r+'``) avrebbe un altro "
"buffering. Per disabilitare il buffering in ``TextIOWrapper``, considera "
"l'uso del flag ``write_through`` per :func:`io.TextIOWrapper.reconfigure`. "
"Quando non viene dato l'argomento *buffering*, la politica di buffering "
"predefinita funziona come segue:"

#: library/functions.rst:1319
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :const:`io.DEFAULT_BUFFER_SIZE`.  On many "
"systems, the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"I file binari sono bufferizzati in blocchi a dimensione fissa; la dimensione "
"del buffer è scelta usando un'euristica che tenta di determinare la "
"\"dimensione del blocco\" del dispositivo sottostante e ricade su :const:`io."
"DEFAULT_BUFFER_SIZE`. In molti sistemi, il buffer sarà tipicamente lungo "
"4096 o 8192 byte."

#: library/functions.rst:1324
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"I file di testo \"interattivi\" (file per cui :meth:`~io.IOBase.isatty` "
"restituisce ``True``) utilizzano il line buffering. Altri file di testo "
"utilizzano la politica descritta sopra per i file binari."

#: library/functions.rst:1328
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getencoding` returns), but any :term:`text "
"encoding` supported by Python can be used. See the :mod:`codecs` module for "
"the list of supported encodings."
msgstr ""
"*encoding* è il nome della codifica utilizzata per decodificare o codificare "
"il file. Questo dovrebbe essere usato solo in modalità testo. La codifica "
"predefinita dipende dalla piattaforma (qualsiasi cosa restituita da :func:"
"`locale.getencoding`), ma qualsiasi :term:`text encoding` supportato da "
"Python può essere utilizzato. Vedi il modulo :mod:`codecs` per l'elenco "
"delle codifiche supportate."

#: library/functions.rst:1334
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with :func:`codecs."
"register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* è una stringa opzionale che specifica come devono essere gestiti "
"gli errori di codifica e decodifica — questo non può essere usato in "
"modalità binaria. È disponibile una varietà di gestori di errore standard "
"(elencati sotto :ref:`error-handlers`), anche se qualsiasi nome di gestione "
"degli errori registrato con :func:`codecs.register_error` è anche valido. I "
"nomi standard includono:"

#: library/functions.rst:1342
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr ""
"``'strict'`` per sollevare un'eccezione :exc:`ValueError` se c'è un errore "
"di codifica. Il valore predefinito di ``None`` ha lo stesso effetto."

#: library/functions.rst:1346
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to "
"data loss."
msgstr ""
"``'ignore'`` ignora gli errori. Nota che ignorare gli errori di codifica può "
"portare a perdita di dati."

#: library/functions.rst:1349
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr ""
"``'replace'`` fa sì che un marcatore di sostituzione (come ``'?'``) venga "
"inserito dove ci sono dati malformati."

#: library/functions.rst:1352
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as low surrogate "
"code units ranging from U+DC80 to U+DCFF. These surrogate code units will "
"then be turned back into the same bytes when the ``surrogateescape`` error "
"handler is used when writing data.  This is useful for processing files in "
"an unknown encoding."
msgstr ""
"``'surrogateescape'`` rappresenterà eventuali byte errati come unità di "
"codice basso surrogate che vanno da U+DC80 a U+DCFF. Queste unità di codice "
"surrogate verranno quindi trasformate di nuovo negli stessi byte quando il "
"gestore di errori ``surrogateescape`` è utilizzato durante la scrittura dei "
"dati. Questo è utile per elaborare file in una codifica sconosciuta."

#: library/functions.rst:1359
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters "
"not supported by the encoding are replaced with the appropriate XML "
"character reference :samp:`&#{nnn};`."
msgstr ""
"``'xmlcharrefreplace'`` è supportato solo durante la scrittura in un file. I "
"caratteri non supportati dalla codifica sono sostituiti con il riferimento "
"ai caratteri XML appropriato :samp:`&#{nnn};`."

#: library/functions.rst:1363
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr ""
"``'backslashreplace'`` sostituisce i dati malformati con le sequenze di "
"escape con barra rovesciata di Python."

#: library/functions.rst:1366
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr ""
"``'namereplace'`` (anche questo supportato solo durante la scrittura) "
"sostituisce i caratteri non supportati con le sequenze di escape ``\\N{...}"
"``."

#: library/functions.rst:1374
msgid ""
"*newline* determines how to parse newline characters from the stream. It can "
"be ``None``, ``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as "
"follows:"
msgstr ""
"*newline* determina come analizzare i caratteri di nuova riga dal flusso. "
"Può essere ``None``, ``''``, ``'\\n'``, ``'\\r'`` e ``'\\r\\n'``. Funziona "
"come segue:"

#: library/functions.rst:1378
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"Quando si legge l'input dal flusso, se *newline* è ``None``, è attivata la "
"modalità di nuove righe universali. Le righe nell'input possono terminare "
"con ``'\\n'``, ``'\\r'`` o ``'\\r\\n'`` e queste sono tradotte in ``'\\n'`` "
"prima di essere restituite al chiamante. Se è ``''``, è attivata la modalità "
"di nuove righe universali, ma le terminazioni di riga sono restituite al "
"chiamante non tradotte. Se ha uno degli altri valori legali, le righe di "
"input sono terminate solo dalla stringa data e la terminazione della riga è "
"restituita al chiamante non tradotta."

#: library/functions.rst:1386
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"Quando si scrive l'output nel flusso, se *newline* è ``None``, qualsiasi "
"carattere ``'\\n'`` scritto è tradotto nel separatore di linea predefinito "
"del sistema, :data:`os.linesep`. Se *newline* è ``''`` o ``'\\n'``, non "
"avviene alcuna traduzione. Se *newline* è uno degli altri valori legali, "
"qualsiasi carattere ``'\\n'`` scritto è tradotto nella stringa data."

#: library/functions.rst:1392
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default); "
"otherwise, an error will be raised."
msgstr ""
"Se *closefd* è ``False`` e viene fornito un descrittore di file anziché un "
"nome file, il descrittore di file sottostante verrà mantenuto aperto quando "
"il file viene chiuso. Se viene fornito un nome file, *closefd* deve essere "
"``True`` (predefinito); altrimenti verrà generato un errore."

#: library/functions.rst:1397
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"Un apri-file personalizzato può essere utilizzato passando un callable come "
"*opener*. Il descrittore di file sottostante per l'oggetto file viene quindi "
"ottenuto chiamando *opener* con (*file*, *flags*). *opener* deve restituire "
"un descrittore di file aperto (passando :mod:`os.open` come *opener* si "
"ottiene una funzionalità simile a quella di passare ``None``)."

#: library/functions.rst:1403
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "Il file appena creato è :ref:`non-inheritable <fd_inheritance>`."

#: library/functions.rst:1405
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the :func:"
"`os.open` function to open a file relative to a given directory::"
msgstr ""
"Il seguente esempio utilizza il parametro :ref:`dir_fd <dir_fd>` della "
"funzione :func:`os.open` per aprire un file rispetto a una determinata "
"directory::"

#: library/functions.rst:1418
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in read/"
"write mode, it returns an :class:`io.BufferedRandom`.  When buffering is "
"disabled, the raw stream, a subclass of :class:`io.RawIOBase`, :class:`io."
"FileIO`, is returned."
msgstr ""
"Il tipo di :term:`file object` restituito dalla funzione :func:`open` "
"dipende dalla modalità. Quando :func:`open` è usato per aprire un file in "
"modalità testo (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, ecc.), restituisce una "
"sottoclasse di :class:`io.TextIOBase` (specificamente :class:`io."
"TextIOWrapper`). Quando è usato per aprire un file in modalità binaria con "
"buffering, la classe restituita è una sottoclasse di :class:`io."
"BufferedIOBase`. La classe esatta varia: in modalità di lettura binaria, "
"restituisce un :class:`io.BufferedReader`; in modalità di scrittura binaria "
"e di aggiunta binaria, restituisce un :class:`io.BufferedWriter`, e in "
"modalità di lettura/scrittura, restituisce un :class:`io.BufferedRandom`. "
"Quando il buffering è disabilitato, viene restituito il flusso raw, una "
"sottoclasse di :class:`io.RawIOBase`, :class:`io.FileIO`."

#: library/functions.rst:1439
msgid ""
"See also the file handling modules, such as :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, and :mod:`shutil`."
msgstr ""
"Vedi anche i moduli di gestione dei file, come :mod:`fileinput`, :mod:`io` "
"(dove è dichiarato :func:`open`), :mod:`os`, :mod:`os.path`, :mod:`tempfile` "
"e :mod:`shutil`."

#: library/functions.rst:1443
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``file``, "
"``mode``, ``flags``."
msgstr ""
"Solleva un :ref:`auditing event <auditing>` ``open`` con argomenti ``file``, "
"``mode``, ``flags``."

#: library/functions.rst:1445
msgid ""
"The ``mode`` and ``flags`` arguments may have been modified or inferred from "
"the original call."
msgstr ""
"Gli argomenti ``mode`` e ``flags`` potrebbero essere stati modificati o "
"dedotti dalla chiamata originale."

#: library/functions.rst:1450
msgid "The *opener* parameter was added."
msgstr "È stato aggiunto il parametro *opener*."

#: library/functions.rst:1451
msgid "The ``'x'`` mode was added."
msgstr "È stato aggiunto il modo ``'x'``."

#: library/functions.rst:1452
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError` veniva sollevato in passato, ora è un alias di :exc:`OSError`."

#: library/functions.rst:1453
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr ""
":exc:`FileExistsError` viene ora sollevato se il file aperto in modalità di "
"creazione esclusiva (``'x'``) esiste già."

#: library/functions.rst:1458
msgid "The file is now non-inheritable."
msgstr "Il file ora è non ereditabile."

#: library/functions.rst:1462
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"Se la chiamata di sistema viene interrotta e il gestore dei segnali non "
"solleva un'eccezione, la funzione ora riprova la chiamata di sistema anziché "
"sollevare un'eccezione :exc:`InterruptedError` (vedi :pep:`475` per la "
"motivazione)."

#: library/functions.rst:1465
msgid "The ``'namereplace'`` error handler was added."
msgstr "È stato aggiunto il gestore di errori ``'namereplace'``."

#: library/functions.rst:1469
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr ""
"È stato aggiunto il supporto per accettare oggetti che implementano :class:"
"`os.PathLike`."

#: library/functions.rst:1470
msgid ""
"On Windows, opening a console buffer may return a subclass of :class:`io."
"RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"Su Windows, l'apertura di un buffer di console può restituire una "
"sottoclasse di :class:`io.RawIOBase` diversa da :class:`io.FileIO`."

#: library/functions.rst:1473
msgid "The ``'U'`` mode has been removed."
msgstr "È stato rimosso il modo ``'U'``."

#: library/functions.rst:1478
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns "
"``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"Data una stringa che rappresenta un carattere Unicode, restituisce un intero "
"che rappresenta il punto di codice Unicode di quel carattere. Ad esempio, "
"``ord('a')`` restituisce l'intero ``97`` e ``ord('€')`` (segno dell'Euro) "
"restituisce ``8364``. Questo è l'inverso di :func:`chr`."

#: library/functions.rst:1486
msgid ""
"Return *base* to the power *exp*; if *mod* is present, return *base* to the "
"power *exp*, modulo *mod* (computed more efficiently than ``pow(base, exp) % "
"mod``). The two-argument form ``pow(base, exp)`` is equivalent to using the "
"power operator: ``base**exp``."
msgstr ""
"Restituisce *base* elevato a *exp*; se *mod* è presente, restituisce *base* "
"elevato a *exp*, modulo *mod* (calcolato più efficientemente di ``pow(base, "
"exp) % mod``). La forma a due argomenti ``pow(base, exp)`` è equivalente "
"all'utilizzo dell'operatore di potenza: ``base**exp``."

#: library/functions.rst:1491
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``pow(10, "
"2)`` returns ``100``, but ``pow(10, -2)`` returns ``0.01``.  For a negative "
"base of type :class:`int` or :class:`float` and a non-integral exponent, a "
"complex result is delivered.  For example, ``pow(-9, 0.5)`` returns a value "
"close to ``3j``."
msgstr ""
"Gli argomenti devono essere di tipo numerico. Con tipi di operandi misti, si "
"applicano le regole di coercizione per gli operatori aritmetici binari. Per "
"gli operandi :class:`int`, il risultato ha lo stesso tipo degli operandi "
"(dopo la coercizione) a meno che il secondo argomento non sia negativo; in "
"tal caso, tutti gli argomenti sono convertiti in float e viene restituito un "
"risultato float. Ad esempio, ``pow(10, 2)`` restituisce ``100``, ma "
"``pow(10, -2)`` restituisce ``0.01``. Per una base negativa di tipo :class:"
"`int` o :class:`float` e un esponente non intero, viene restituito un "
"risultato complesso. Ad esempio, ``pow(-9, 0.5)`` restituisce un valore "
"vicino a ``3j``."

#: library/functions.rst:1501
msgid ""
"For :class:`int` operands *base* and *exp*, if *mod* is present, *mod* must "
"also be of integer type and *mod* must be nonzero. If *mod* is present and "
"*exp* is negative, *base* must be relatively prime to *mod*. In that case, "
"``pow(inv_base, -exp, mod)`` is returned, where *inv_base* is an inverse to "
"*base* modulo *mod*."
msgstr ""
"Per gli operandi :class:`int` *base* e *exp*, se *mod* è presente, *mod* "
"deve essere anche di tipo intero e *mod* deve essere diverso da zero. Se "
"*mod* è presente e *exp* è negativo, *base* deve essere relativamente primo "
"a *mod*. In tal caso, viene restituito ``pow(inv_base, -exp, mod)``, dove "
"*inv_base* è un inverso di *base* modulo *mod*."

#: library/functions.rst:1507
msgid "Here's an example of computing an inverse for ``38`` modulo ``97``::"
msgstr "Ecco un esempio di calcolo di un inverso per ``38`` modulo ``97``::"

#: library/functions.rst:1514
msgid ""
"For :class:`int` operands, the three-argument form of ``pow`` now allows the "
"second argument to be negative, permitting computation of modular inverses."
msgstr ""
"Per gli operandi :class:`int`, la forma a tre argomenti di ``pow`` ora "
"consente che il secondo argomento sia negativo, permettendo il calcolo degli "
"inversi modulari."

#: library/functions.rst:1519
msgid ""
"Allow keyword arguments.  Formerly, only positional arguments were supported."
msgstr ""
"Consente argomenti di parola chiave. In passato, erano supportati solo "
"argomenti posizionali."

#: library/functions.rst:1526
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file*, and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"Stampa *objects* sul flusso di testo *file*, separati da *sep* e seguiti da "
"*end*. *sep*, *end*, *file* e *flush*, se presenti, devono essere dati come "
"argomenti di parola chiave."

#: library/functions.rst:1530
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""
"Tutti gli argomenti non di parola chiave sono convertiti in stringhe come "
"fa :func:`str` e scritti nel flusso, separati da *sep* e seguiti da *end*. "
"Sia *sep* che *end* devono essere stringhe; possono anche essere ``None``, "
"il che significa usare i valori predefiniti. Se non vengono dati *objects*, :"
"func:`print` scriverà solo *end*."

#: library/functions.rst:1536
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Since printed "
"arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"L'argomento *file* deve essere un oggetto con un metodo ``write(string)``; "
"se non è presente o è ``None``, verrà utilizzato :data:`sys.stdout`. Poiché "
"gli argomenti stampati sono convertiti in stringhe di testo, :func:`print` "
"non può essere utilizzato con oggetti file in modalità binaria. Per questi, "
"utilizzare ``file.write(...)`` invece."

#: library/functions.rst:1541
msgid ""
"Output buffering is usually determined by *file*. However, if *flush* is "
"true, the stream is forcibly flushed."
msgstr ""
"Il buffering dell'output è di solito determinato da *file*. Tuttavia, se "
"*flush* è vero, il flusso viene forzato a essere svuotato."

#: library/functions.rst:1545
msgid "Added the *flush* keyword argument."
msgstr "Aggiunto il parametro di parola chiave *flush*."

#: library/functions.rst:1551
msgid "Return a property attribute."
msgstr "Restituisce un attributo di proprietà."

#: library/functions.rst:1553
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* è una funzione per ottenere il valore di un attributo. *fset* è una "
"funzione per impostare il valore di un attributo. *fdel* è una funzione per "
"eliminare il valore di un attributo. E *doc* crea una docstring per "
"l'attributo."

#: library/functions.rst:1557
msgid "A typical use is to define a managed attribute ``x``::"
msgstr "Un uso tipico è definire un attributo gestito ``x``::"

#: library/functions.rst:1574
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter, and ``del c.x`` the deleter."
msgstr ""
"Se *c* è un'istanza di *C*, ``c.x`` invocherà il getter, ``c.x = valore`` "
"invocherà il setter, e ``del c.x`` il deleter."

#: library/functions.rst:1577
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""
"Se fornito, *doc* sarà la docstring dell'attributo property. Altrimenti, la "
"property copierà la docstring di *fget* (se esiste). Questo rende possibile "
"creare facilmente proprietà di sola lettura usando :func:`property` come un :"
"term:`decorator`::"

#: library/functions.rst:1590
msgid ""
"The ``@property`` decorator turns the :meth:`!voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"Il decoratore ``@property`` trasforma il metodo :meth:`!voltage` in un "
"\"getter\" per un attributo di sola lettura con lo stesso nome, e imposta la "
"docstring di *voltage* a \"Get the current voltage.\""

#: library/functions.rst:1598
msgid ""
"A property object has ``getter``, ``setter``, and ``deleter`` methods usable "
"as decorators that create a copy of the property with the corresponding "
"accessor function set to the decorated function.  This is best explained "
"with an example:"
msgstr ""
"Un oggetto property ha metodi ``getter``, ``setter``, e ``deleter`` "
"utilizzabili come decoratori che creano una copia della property con la "
"funzione di accesso corrispondente impostata sulla funzione decorata. Questo "
"è spiegato al meglio con un esempio:"

#: library/functions.rst:1622
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""
"Questo codice è esattamente equivalente al primo esempio. Assicurati di dare "
"alle funzioni aggiuntive lo stesso nome della proprietà originale (``x`` in "
"questo caso.)"

#: library/functions.rst:1626
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""
"L'oggetto property restituito ha anche gli attributi ``fget``, ``fset``, e "
"``fdel`` corrispondenti agli argomenti del costruttore."

#: library/functions.rst:1629
msgid "The docstrings of property objects are now writeable."
msgstr "Le docstring degli oggetti property ora sono scrivibili."

#: library/functions.rst:1638
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
"Piuttosto che essere una funzione, :class:`range` è in realtà un tipo di "
"sequenza immutabile, come documentato in :ref:`typesseq-range` e :ref:"
"`typesseq`."

#: library/functions.rst:1644
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`; otherwise, "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`~object.__repr__` "
"method. If :func:`sys.displayhook` is not accessible, this function will "
"raise :exc:`RuntimeError`."
msgstr ""
"Restituisce una stringa contenente una rappresentazione stampabile di un "
"oggetto. Per molti tipi, questa funzione tenta di restituire una stringa che "
"produrrebbe un oggetto con lo stesso valore quando passato a :func:`eval`; "
"altrimenti, la rappresentazione è una stringa racchiusa tra parentesi "
"angolari che contiene il nome del tipo dell'oggetto insieme a informazioni "
"aggiuntive, spesso includendo il nome e l'indirizzo dell'oggetto. Una classe "
"può controllare ciò che questa funzione restituisce per le sue istanze "
"definendo un metodo :meth:`~object.__repr__`. Se :func:`sys.displayhook` non "
"è accessibile, questa funzione genererà :exc:`RuntimeError`."

#: library/functions.rst:1655
msgid "This class has a custom representation that can be evaluated::"
msgstr ""
"Questa classe ha una rappresentazione personalizzata che può essere "
"valutata::"

#: library/functions.rst:1668
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`~object.__reversed__` method or supports the sequence protocol (the :"
"meth:`~object.__len__` method and the :meth:`~object.__getitem__` method "
"with integer arguments starting at ``0``)."
msgstr ""
"Restituisce un :term:`iterator` invertito. *seq* deve essere un oggetto che "
"ha un metodo :meth:`~object.__reversed__` o supporta il protocollo delle "
"sequenze (il metodo :meth:`~object.__len__` e il metodo :meth:`~object."
"__getitem__` con argomenti interi a partire da ``0``)."

#: library/functions.rst:1676
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"Restituisce *number* arrotondato a *ndigits* precisione dopo il punto "
"decimale. Se *ndigits* è omesso o è ``None``, restituisce l'intero più "
"vicino al valore di input."

#: library/functions.rst:1680
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise, the return value has the same type as *number*."
msgstr ""
"Per i tipi built-in che supportano :func:`round`, i valori sono arrotondati "
"al multiplo più vicino di 10 elevato alla potenza con segno meno *ndigits*; "
"se due multipli sono ugualmente vicini, l'arrotondamento è fatto verso la "
"scelta pari (così, per esempio, sia ``round(0.5)`` che ``round(-0.5)`` sono "
"``0``, e ``round(1.5)`` è ``2``). Qualsiasi valore intero è valido per "
"*ndigits* (positivo, zero o negativo). Il valore restituito è un intero se "
"*ndigits* è omesso o è ``None``. Altrimenti, il valore restituito ha lo "
"stesso tipo di *number*."

#: library/functions.rst:1689
msgid ""
"For a general Python object ``number``, ``round`` delegates to ``number."
"__round__``."
msgstr ""
"Per un oggetto Python generico ``number``, ``round`` delega a ``number."
"__round__``."

#: library/functions.rst:1694
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"Il comportamento di :func:`round` per i float può essere sorprendente: per "
"esempio, ``round(2.675, 2)`` dà ``2.67`` invece del previsto ``2.68``. "
"Questo non è un bug: è il risultato del fatto che la maggior parte delle "
"frazioni decimali non può essere rappresentata esattamente come un float. "
"Vedi :ref:`tut-fp-issues` per maggiori informazioni."

#: library/functions.rst:1706
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"Restituisce un nuovo oggetto :class:`set`, opzionalmente con elementi presi "
"da *iterable*. ``set`` è una classe built-in. Vedi :class:`set` e :ref:"
"`types-set` per la documentazione su questa classe."

#: library/functions.rst:1710
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, :"
"class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections` "
"module."
msgstr ""
"Per altri contenitori vedi le classi built-in :class:`frozenset`, :class:"
"`list`, :class:`tuple`, e :class:`dict`, così come il modulo :mod:"
"`collections`."

#: library/functions.rst:1717
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string, and an arbitrary value.  The string may name an existing attribute "
"or a new attribute.  The function assigns the value to the attribute, "
"provided the object allows it.  For example, ``setattr(x, 'foobar', 123)`` "
"is equivalent to ``x.foobar = 123``."
msgstr ""
"Questo è il corrispettivo di :func:`getattr`. Gli argomenti sono un oggetto, "
"una stringa e un valore arbitrario. La stringa può nominare un attributo "
"esistente o un nuovo attributo. La funzione assegna il valore all'attributo, "
"a condizione che l'oggetto lo consenta. Per esempio, ``setattr(x, 'foobar', "
"123)`` è equivalente a ``x.foobar = 123``."

#: library/functions.rst:1723
msgid ""
"*name* need not be a Python identifier as defined in :ref:`identifiers` "
"unless the object chooses to enforce that, for example in a custom :meth:"
"`~object.__getattribute__` or via :attr:`~object.__slots__`. An attribute "
"whose name is not an identifier will not be accessible using the dot "
"notation, but is accessible through :func:`getattr` etc.."
msgstr ""
"*name* non deve essere necessariamente un identificatore Python come "
"definito in :ref:`identifiers` a meno che l'oggetto non scelga di far "
"rispettare ciò, per esempio in un metodo personalizzato :meth:`~object."
"__getattribute__` o tramite :attr:`~object.__slots__`. Un attributo il cui "
"nome non è un identificatore non sarà accessibile usando la notazione a "
"punto, ma è accessibile tramite :func:`getattr` ecc."

#: library/functions.rst:1731
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to set it with :func:`setattr`."
msgstr ""
"Poiché :ref:`nome privato confuso <private-name-mangling>` avviene al "
"momento della compilazione, bisogna manualmente confondere il nome di un "
"attributo privato (attributi con due trattini bassi all'inizio) per "
"impostarlo con :func:`setattr`."

#: library/functions.rst:1740
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``."
msgstr ""
"Restituisce un oggetto :term:`slice` che rappresenta l'insieme di indici "
"specificati da ``range(start, stop, step)``. Gli argomenti *start* e *step* "
"predefiniti sono ``None``."

#: library/functions.rst:1748
msgid ""
"Slice objects have read-only data attributes :attr:`!start`, :attr:`!stop`, "
"and :attr:`!step` which merely return the argument values (or their "
"default).  They have no other explicit functionality; however, they are used "
"by NumPy and other third-party packages."
msgstr ""
"Gli oggetti Slice hanno attributi dati di sola lettura :attr:`!start`, :attr:"
"`!stop`, e :attr:`!step` che restituiscono semplicemente i valori degli "
"argomenti (o il loro valore predefinito). Non hanno altra funzionalità "
"esplicita; tuttavia, sono usati da NumPy e da altri pacchetti di terze parti."

#: library/functions.rst:1753
msgid ""
"Slice objects are also generated when extended indexing syntax is used.  For "
"example: ``a[start:stop:step]`` or ``a[start:stop, i]``.  See :func:"
"`itertools.islice` for an alternate version that returns an :term:`iterator`."
msgstr ""
"Gli oggetti Slice vengono anche generati quando viene utilizzata la sintassi "
"di indicizzazione estesa. Per esempio: ``a[start:stop:step]`` o ``a[start:"
"stop, i]``. Vedi :func:`itertools.islice` per una versione alternativa che "
"restituisce un :term:`iterator`."

#: library/functions.rst:1758
msgid ""
"Slice objects are now :term:`hashable` (provided :attr:`~slice.start`, :attr:"
"`~slice.stop`, and :attr:`~slice.step` are hashable)."
msgstr ""
"Gli oggetti Slice ora sono :term:`hashable` (fornito che :attr:`~slice."
"start`, :attr:`~slice.stop`, e :attr:`~slice.step` siano hashable)."

#: library/functions.rst:1764
msgid "Return a new sorted list from the items in *iterable*."
msgstr "Restituisce una nuova lista ordinata dagli elementi in *iterable*."

#: library/functions.rst:1766
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr ""
"Ha due argomenti opzionali che devono essere specificati come argomenti per "
"parola chiave."

#: library/functions.rst:1768
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, ``key=str."
"lower``).  The default value is ``None`` (compare the elements directly)."
msgstr ""
"*key* specifica una funzione di un argomento che viene utilizzata per "
"estrarre una chiave di confronto da ciascun elemento in *iterable* (per "
"esempio, ``key=str.lower``). Il valore predefinito è ``None`` (confronta gli "
"elementi direttamente)."

#: library/functions.rst:1772
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* è un valore booleano. Se impostato su ``True``, gli elementi della "
"lista vengono ordinati come se ogni confronto fosse inverso."

#: library/functions.rst:1775
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a "
"*key* function."
msgstr ""
"Usa :func:`functools.cmp_to_key` per convertire una vecchia funzione *cmp* "
"in una funzione *key*."

#: library/functions.rst:1778
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"La funzione built-in :func:`sorted` è garantita per essere stabile. Un "
"ordinamento è stabile se garantisce di non modificare l'ordine relativo "
"degli elementi che confronta uguali --- questo è utile per ordinare in più "
"passaggi (per esempio, ordinare per reparto, poi per grado di stipendio)."

#: library/functions.rst:1783
msgid ""
"The sort algorithm uses only ``<`` comparisons between items.  While "
"defining an :meth:`~object.__lt__` method will suffice for sorting, :PEP:`8` "
"recommends that all six :ref:`rich comparisons <comparisons>` be "
"implemented.  This will help avoid bugs when using the same data with other "
"ordering tools such as :func:`max` that rely on a different underlying "
"method.  Implementing all six comparisons also helps avoid confusion for "
"mixed type comparisons which can call reflected the :meth:`~object.__gt__` "
"method."
msgstr ""
"L'algoritmo di ordinamento utilizza solo confronti ``<`` tra gli elementi. "
"Sebbene la definizione di un metodo :meth:`~object.__lt__` sia sufficiente "
"per ordinare, :PEP:`8` raccomanda che tutte e sei le :ref:`comparazioni "
"ricche <comparisons>` siano implementate. Questo aiuterà ad evitare bug "
"quando si utilizza lo stesso dato con altri strumenti di ordinamento come :"
"func:`max` che si basano su un metodo sottostante diverso. Implementare "
"tutte e sei le comparazioni aiuta anche a evitare confusione per i confronti "
"di tipo misto che possono chiamare il metodo riflesso :meth:`~object.__gt__`."

#: library/functions.rst:1792
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"Per esempi di ordinamento e un breve tutorial sull'ordinamento, vedere :ref:"
"`sortinghowto`."

#: library/functions.rst:1796
msgid "Transform a method into a static method."
msgstr "Trasforma un metodo in un metodo statico."

#: library/functions.rst:1798
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""
"Un metodo statico non riceve un argomento primo implicito. Per dichiarare un "
"metodo statico, usa questo idiom::"

#: library/functions.rst:1805
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"La forma ``@staticmethod`` è un :term:`decorator` di funzione -- vedere :ref:"
"`function` per dettagli."

#: library/functions.rst:1808
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``). Moreover, the static method :term:"
"`descriptor` is also callable, so it can be used in the class definition "
"(such as ``f()``)."
msgstr ""
"Un metodo statico può essere chiamato sia sulla classe (come ``C.f()``) che "
"su un'istanza (come ``C().f()``). Inoltre, il :term:`descriptor` del metodo "
"statico è anche invocabile, quindi può essere utilizzato nella definizione "
"della classe (come ``f()``)."

#: library/functions.rst:1813
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also, "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"I metodi statici in Python sono simili a quelli trovati in Java o C++. "
"Inoltre, vedere :func:`classmethod` per una variante utile per creare "
"costruttori di classe alternativi."

#: library/functions.rst:1817
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"Come tutti i decoratori, è anche possibile chiamare ``staticmethod`` come "
"una funzione regolare e fare qualcosa con il suo risultato. Questo è "
"necessario in alcuni casi in cui è necessario un riferimento a una funzione "
"dal corpo di una classe e si desidera evitare la trasformazione automatica a "
"metodo istanza. Per questi casi, utilizza questo idiom::"

#: library/functions.rst:1829
msgid "For more information on static methods, see :ref:`types`."
msgstr "Per maggiori informazioni sui metodi statici, vedere :ref:`types`."

#: library/functions.rst:1831
msgid ""
"Static methods now inherit the method attributes (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``), have a "
"new ``__wrapped__`` attribute, and are now callable as regular functions."
msgstr ""
"I metodi statici ora ereditano gli attributi del metodo (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` e ``__annotations__``), hanno un "
"nuovo attributo ``__wrapped__``, e ora sono invocabili come funzioni "
"regolari."

#: library/functions.rst:1846
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr ""
"Restituisce una versione :class:`str` di *object*. Vedi :func:`str` per "
"dettagli."

#: library/functions.rst:1848
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about "
"strings, see :ref:`textseq`."
msgstr ""
"``str`` è la :term:`class` stringa built-in. Per informazioni generali sulle "
"stringhe, vedere :ref:`textseq`."

#: library/functions.rst:1854
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  The *iterable*'s items are normally numbers, and the start value "
"is not allowed to be a string."
msgstr ""
"Somma *start* e gli elementi di un *iterable* da sinistra a destra e "
"restituisce il totale. Gli elementi dell'*iterable* sono normalmente numeri, "
"e il valore iniziale non può essere una stringa."

#: library/functions.rst:1858
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""
"Per alcuni casi d'uso, ci sono buone alternative a :func:`sum`. Il modo "
"preferito e rapido per concatenare una sequenza di stringhe è chiamare ``''."
"join(sequence)``. Per aggiungere valori a virgola mobile con precisione "
"estesa, vedere :func:`math.fsum`. Per concatenare una serie di oggetti "
"iterabili, considera di usare :func:`itertools.chain`."

#: library/functions.rst:1864
msgid "The *start* parameter can be specified as a keyword argument."
msgstr ""
"Il parametro *start* può essere specificato come argomento per parola chiave."

#: library/functions.rst:1867
msgid ""
"Summation of floats switched to an algorithm that gives higher accuracy on "
"most builds."
msgstr ""
"La somma dei numeri in virgola mobile è stata cambiata in un algoritmo che "
"offre una maggiore precisione nella maggior parte delle build."

#: library/functions.rst:1874
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class."
msgstr ""
"Restituisce un oggetto proxy che delega le chiamate ai metodi a una classe "
"genitrice o sorella di *type*. Questo è utile per accedere a metodi "
"ereditati che sono stati sovrascritti in una classe."

#: library/functions.rst:1878
msgid ""
"The *object_or_type* determines the :term:`method resolution order` to be "
"searched.  The search starts from the class right after the *type*."
msgstr ""
"L'*object_or_type* determina l'ordine di risoluzione del :term:`method "
"resolution order` da cercare. La ricerca inizia dalla classe subito dopo "
"*type*."

#: library/functions.rst:1882
msgid ""
"For example, if :attr:`~class.__mro__` of *object_or_type* is ``D -> B -> C -"
"> A -> object`` and the value of *type* is ``B``, then :func:`super` "
"searches ``C -> A -> object``."
msgstr ""
"Per esempio, se l':attr:`~class.__mro__` di *object_or_type* è ``D -> B -> C "
"-> A -> object`` e il valore di *type* è ``B``, allora :func:`super` cerca "
"``C -> A -> object``."

#: library/functions.rst:1886
msgid ""
"The :attr:`~class.__mro__` attribute of the *object_or_type* lists the "
"method resolution search order used by both :func:`getattr` and :func:"
"`super`.  The attribute is dynamic and can change whenever the inheritance "
"hierarchy is updated."
msgstr ""
"L'attributo :attr:`~class.__mro__` di *object_or_type* elenca l'ordine di "
"ricerca per la risoluzione dei metodi usato sia da :func:`getattr` che da :"
"func:`super`. L'attributo è dinamico e può cambiare ogni volta che la "
"gerarchia di ereditarietà viene aggiornata."

#: library/functions.rst:1891
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"Se il secondo argomento viene omesso, l'oggetto super restituito non è "
"associato ad alcuna istanza. Se il secondo argomento è un oggetto, "
"``isinstance(obj, type)`` deve essere vero. Se il secondo argomento è un "
"tipo, ``issubclass(type2, type)`` deve essere vero (questo è utile per i "
"classmethods)."

#: library/functions.rst:1896
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"Ci sono due casi d'uso tipici per *super*. In una gerarchia di classi con "
"ereditarietà singola, *super* può essere usato per riferirsi alle classi "
"genitori senza nominarle esplicitamente, rendendo così il codice più "
"mantenibile. Questo uso è molto simile all'uso di *super* in altri linguaggi "
"di programmazione."

#: library/functions.rst:1901
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"such implementations have the same calling signature in every case (because "
"the order of calls is determined at runtime, because that order adapts to "
"changes in the class hierarchy, and because that order can include sibling "
"classes that are unknown prior to runtime)."
msgstr ""
"Il secondo caso d'uso è supportare l'ereditarietà multipla cooperativa in un "
"ambiente di esecuzione dinamico. Questo caso d'uso è unico per Python e non "
"si trova nei linguaggi compilati staticamente o nei linguaggi che supportano "
"solo l'ereditarietà singola. Questo rende possibile implementare \"diagrammi "
"a diamante\" dove più classi base implementano lo stesso metodo. Un buon "
"design richiede che tali implementazioni abbiano la stessa firma di chiamata "
"in ogni caso (poiché l'ordine delle chiamate è determinato in fase di "
"runtime, perché tale ordine si adatta ai cambiamenti nella gerarchia di "
"classi e perché tale ordine può includere classi sorelle che sono "
"sconosciute prima del runtime)."

#: library/functions.rst:1911
msgid "For both use cases, a typical superclass call looks like this::"
msgstr ""
"Per entrambi i casi d'uso, una chiamata tipica alla superclass sembra così::"

#: library/functions.rst:1918
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptors "
"<descriptor>` in a parent or sibling class."
msgstr ""
"Oltre alla ricerca di metodi, :func:`super` funziona anche per la ricerca "
"degli attributi. Un possibile caso d'uso per questo è chiamare i :term:"
"`descrittori <descriptor>` in una classe genitore o sorella."

#: library/functions.rst:1922
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`~object.__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
"Nota che :func:`super` è implementato come parte del processo di "
"associazione per le ricerche di attributi punteggiate esplicite come "
"``super().__getitem__(name)``. Lo fa implementando il proprio metodo :meth:"
"`~object.__getattribute__` per la ricerca di classi in un ordine prevedibile "
"che supporta l'ereditarietà multipla cooperativa. Di conseguenza, :func:"
"`super` non è definito per le ricerche implicite utilizzando dichiarazioni o "
"operatori come ``super()[name]``."

#: library/functions.rst:1930
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"Nota anche che, a parte la forma con zero argomenti, :func:`super` non è "
"limitato all'uso all'interno di metodi. La forma a due argomenti specifica "
"esattamente gli argomenti e fa i riferimenti appropriati. La forma a zero "
"argomenti funziona solo all'interno di una definizione di classe, poiché il "
"compilatore riempie i dettagli necessari per recuperare correttamente la "
"classe in fase di definizione, così come accedere all'istanza corrente per i "
"metodi ordinari."

#: library/functions.rst:1937
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""
"Per suggerimenti pratici su come progettare classi cooperative usando :func:"
"`super`, vedi `guida all'uso di super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."

#: library/functions.rst:1947
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
"Piuttosto che essere una funzione, :class:`tuple` è effettivamente un tipo "
"di sequenza immutabile, come documentato in :ref:`typesseq-tuple` e :ref:"
"`typesseq`."

#: library/functions.rst:1956
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by :attr:`object."
"__class__ <instance.__class__>`."
msgstr ""
"Con un argomento, restituisce il tipo di un *oggetto*. Il valore restituito "
"è un oggetto di tipo ed è generalmente lo stesso oggetto restituito da :attr:"
"`object.__class__ <instance.__class__>`."

#: library/functions.rst:1960
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type "
"of an object, because it takes subclasses into account."
msgstr ""
"La funzione incorporata :func:`isinstance` è raccomandata per testare il "
"tipo di un oggetto, poiché prende in considerazione le sottoclassi."

#: library/functions.rst:1964
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~definition.__name__` attribute. The "
"*bases* tuple contains the base classes and becomes the :attr:`~class."
"__bases__` attribute; if empty, :class:`object`, the ultimate base of all "
"classes, is added.  The *dict* dictionary contains attribute and method "
"definitions for the class body; it may be copied or wrapped before becoming "
"the :attr:`~object.__dict__` attribute. The following two statements create "
"identical :class:`type` objects:"
msgstr ""
"Con tre argomenti, restituisce un nuovo oggetto di tipo. Questo è "
"essenzialmente una forma dinamica della dichiarazione :keyword:`class`. La "
"stringa *name* è il nome della classe e diventa l'attributo :attr:"
"`~definition.__name__`. La tupla *bases* contiene le classi base e diventa "
"l'attributo :attr:`~class.__bases__`; se vuota, :class:`object`, la base "
"ultima di tutte le classi, è aggiunta. Il dizionario *dict* contiene le "
"definizioni di attributi e metodi per il corpo della classe; può essere "
"copiato o avvolto prima di diventare l'attributo :attr:`~object.__dict__`. "
"Le seguenti due dichiarazioni creano oggetti :class:`type` identici:"

#: library/functions.rst:1979
msgid "See also :ref:`bltin-type-objects`."
msgstr "Vedi anche :ref:`bltin-type-objects`."

#: library/functions.rst:1981
msgid ""
"Keyword arguments provided to the three argument form are passed to the "
"appropriate metaclass machinery (usually :meth:`~object.__init_subclass__`) "
"in the same way that keywords in a class definition (besides *metaclass*) "
"would."
msgstr ""
"Gli argomenti di parole chiave forniti alla forma a tre argomenti sono "
"passati alla macchina adeguata della metaclasse (di solito :meth:`~object."
"__init_subclass__`) allo stesso modo degli argomenti di parole chiave in una "
"definizione di classe (a parte *metaclass*)."

#: library/functions.rst:1986
msgid "See also :ref:`class-customization`."
msgstr "Vedi anche :ref:`class-customization`."

#: library/functions.rst:1988
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"Le sottoclassi di :class:`type` che non sovrascrivono ``type.__new__`` "
"possono non usare più la forma con un argomento per ottenere il tipo di un "
"oggetto."

#: library/functions.rst:1995
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance, "
"or any other object with a :attr:`~object.__dict__` attribute."
msgstr ""
"Restituisce l'attributo :attr:`~object.__dict__` per un modulo, classe, "
"istanza o qualsiasi altro oggetto con un attributo :attr:`~object.__dict__`."

#: library/functions.rst:1998
msgid ""
"Objects such as modules and instances have an updateable :attr:`~object."
"__dict__` attribute; however, other objects may have write restrictions on "
"their :attr:`~object.__dict__` attributes (for example, classes use a :class:"
"`types.MappingProxyType` to prevent direct dictionary updates)."
msgstr ""
"Oggetti come moduli e istanze hanno un attributo :attr:`~object.__dict__` "
"aggiornabile; tuttavia, altri oggetti possono avere restrizioni di scrittura "
"sui loro attributi :attr:`~object.__dict__` (ad esempio, le classi usano un :"
"class:`types.MappingProxyType` per prevenire aggiornamenti diretti al "
"dizionario)."

#: library/functions.rst:2003
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""
"Senza un argomento, :func:`vars` funziona come :func:`locals`. Nota, il "
"dizionario locals è utile solo per le letture poiché le modifiche al "
"dizionario locals vengono ignorate."

#: library/functions.rst:2007
msgid ""
"A :exc:`TypeError` exception is raised if an object is specified but it "
"doesn't have a :attr:`~object.__dict__` attribute (for example, if its class "
"defines the :attr:`~object.__slots__` attribute)."
msgstr ""
"Viene sollevata un'eccezione :exc:`TypeError` se viene specificato un "
"oggetto ma non possiede un attributo :attr:`~object.__dict__` (ad esempio, "
"se la sua classe definisce l'attributo :attr:`~object.__slots__`)."

#: library/functions.rst:2013
msgid ""
"Iterate over several iterables in parallel, producing tuples with an item "
"from each one."
msgstr ""
"Itera su più iterabili in parallelo, producendo tuple con un elemento da "
"ciascun iterabile."

#: library/functions.rst:2016
msgid "Example::"
msgstr "Esempio::"

#: library/functions.rst:2025
msgid ""
"More formally: :func:`zip` returns an iterator of tuples, where the *i*-th "
"tuple contains the *i*-th element from each of the argument iterables."
msgstr ""
"Più formalmente: :func:`zip` restituisce un iteratore di tuple, dove la *i*-"
"esima tupla contiene l'*i*-esimo elemento di ciascuno degli iterabili "
"argomento."

#: library/functions.rst:2028
msgid ""
"Another way to think of :func:`zip` is that it turns rows into columns, and "
"columns into rows.  This is similar to `transposing a matrix <https://en."
"wikipedia.org/wiki/Transpose>`_."
msgstr ""
"Un altro modo di pensare a :func:`zip` è che trasforma righe in colonne e "
"colonne in righe. Questo è simile a `trasporre una matrice <https://en."
"wikipedia.org/wiki/Transpose>`_."

#: library/functions.rst:2032
msgid ""
":func:`zip` is lazy: The elements won't be processed until the iterable is "
"iterated on, e.g. by a :keyword:`!for` loop or by wrapping in a :class:"
"`list`."
msgstr ""
":func:`zip` è pigro: gli elementi non saranno processati fino a quando "
"l'iterabile non viene iterato, ad esempio, tramite un ciclo :keyword:`!for` "
"o avvolgendolo in una :class:`list`."

#: library/functions.rst:2036
msgid ""
"One thing to consider is that the iterables passed to :func:`zip` could have "
"different lengths; sometimes by design, and sometimes because of a bug in "
"the code that prepared these iterables.  Python offers three different "
"approaches to dealing with this issue:"
msgstr ""
"Una cosa da considerare è che gli iterabili passati a :func:`zip` potrebbero "
"avere lunghezze diverse; a volte per progettazione e a volte a causa di un "
"bug nel codice che ha preparato questi iterabili. Python offre tre approcci "
"diversi per affrontare questo problema:"

#: library/functions.rst:2041
msgid ""
"By default, :func:`zip` stops when the shortest iterable is exhausted. It "
"will ignore the remaining items in the longer iterables, cutting off the "
"result to the length of the shortest iterable::"
msgstr ""
"Per impostazione predefinita, :func:`zip` si ferma quando l'iterabile più "
"breve è esaurito. Ignorerà gli elementi rimanenti negli iterabili più "
"lunghi, tagliando il risultato alla lunghezza dell'iterabile più corto::"

#: library/functions.rst:2048
msgid ""
":func:`zip` is often used in cases where the iterables are assumed to be of "
"equal length.  In such cases, it's recommended to use the ``strict=True`` "
"option. Its output is the same as regular :func:`zip`::"
msgstr ""
":func:`zip` è spesso usato nei casi in cui si presume che gli iterabili "
"abbiano la stessa lunghezza. In tali casi, è raccomandato usare l'opzione "
"``strict=True``. Il suo output è lo stesso del normale :func:`zip`::"

#: library/functions.rst:2055
msgid ""
"Unlike the default behavior, it raises a :exc:`ValueError` if one iterable "
"is exhausted before the others:"
msgstr ""
"A differenza del comportamento predefinito, solleva un'eccezione :exc:"
"`ValueError` se un iterabile è esaurito prima degli altri:"

#: library/functions.rst:2073
msgid ""
"Without the ``strict=True`` argument, any bug that results in iterables of "
"different lengths will be silenced, possibly manifesting as a hard-to-find "
"bug in another part of the program."
msgstr ""
"Senza l'argomento ``strict=True``, qualsiasi bug che risulti in iterabili di "
"lunghezze diverse verrà silenziato, possibilmente manifestandosi come un bug "
"difficile da trovare in un'altra parte del programma."

#: library/functions.rst:2077
msgid ""
"Shorter iterables can be padded with a constant value to make all the "
"iterables have the same length.  This is done by :func:`itertools."
"zip_longest`."
msgstr ""
"Gli iterabili più corti possono essere imbottiti con un valore costante per "
"rendere tutti gli iterabili della stessa lunghezza. Questo viene fatto da :"
"func:`itertools.zip_longest`."

#: library/functions.rst:2081
msgid ""
"Edge cases: With a single iterable argument, :func:`zip` returns an iterator "
"of 1-tuples.  With no arguments, it returns an empty iterator."
msgstr ""
"Casi limite: Con un singolo argomento iterabile, :func:`zip` restituisce un "
"iteratore di 1-tuple. Senza argomenti, restituisce un iteratore vuoto."

#: library/functions.rst:2084
msgid "Tips and tricks:"
msgstr "Suggerimenti e trucchi:"

#: library/functions.rst:2086
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n, strict=True)``.  This repeats the *same* iterator "
"``n`` times so that each output tuple has the result of ``n`` calls to the "
"iterator. This has the effect of dividing the input into n-length chunks."
msgstr ""
"L'ordine di valutazione da sinistra a destra degli iterabili è garantito. "
"Questo rende possibile un idioma per raggruppare una serie di dati in gruppi "
"di lunghezza n usando ``zip(*[iter(s)]*n, strict=True)``. Questo ripete lo "
"*stesso* iteratore ``n`` volte in modo che ogni tupla di output contenga il "
"risultato di ``n`` chiamate all'iteratore. Questo ha l'effetto di dividere "
"l'input in blocchi di lunghezza n."

#: library/functions.rst:2092
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""
":func:`zip` in combinazione con l'operatore ``*`` può essere usato per "
"separare una lista::"

#: library/functions.rst:2103
msgid "Added the ``strict`` argument."
msgstr "Aggiunto l'argomento ``strict``."

#: library/functions.rst:2115
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""
"Questa è una funzione avanzata che non è necessaria nella programmazione "
"Python quotidiana, a differenza di :func:`importlib.import_module`."

#: library/functions.rst:2118
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the :keyword:`!"
"import` statement, but doing so is **strongly** discouraged as it is usually "
"simpler to use import hooks (see :pep:`302`) to attain the same goals and "
"does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"Questa funzione è invocata dalla dichiarazione :keyword:`import`. Può essere "
"sostituita (importando il modulo :mod:`builtins` e assegnando a ``builtins."
"__import__``) al fine di cambiare la semantica della dichiarazione :keyword:"
"`!import`, ma farlo è **fortemente** sconsigliato poiché è di solito più "
"semplice usare gli hook di importazione (vedi :pep:`302`) per raggiungere "
"gli stessi obiettivi e non causa problemi con il codice che assume che "
"l'implementazione di importazione predefinita sia in uso. L'uso diretto di :"
"func:`__import__` è anche sconsigliato a favore di :func:`importlib."
"import_module`."

#: library/functions.rst:2127
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"La funzione importa il modulo *name*, potenzialmente utilizzando i *globals* "
"e *locals* dati per determinare come interpretare il nome in un contesto di "
"pacchetto. La *fromlist* fornisce i nomi degli oggetti o sottomoduli che "
"dovrebbero essere importati dal modulo specificato da *name*. "
"L'implementazione standard non utilizza affatto il suo argomento *locals* e "
"utilizza il suo argomento *globals* solo per determinare il contesto di "
"pacchetto della dichiarazione :keyword:`import`."

#: library/functions.rst:2134
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* specifica se usare importazioni assolute o relative. ``0`` (il "
"valore predefinito) significa eseguire solo importazioni assolute. Valori "
"positivi per *level* indicano il numero di directory genitore da cercare "
"relativi alla directory del modulo che chiama :func:`__import__` (vedi :pep:"
"`328` per i dettagli)."

#: library/functions.rst:2140
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"Quando la variabile *name* è della forma ``package.module``, normalmente "
"viene restituito il pacchetto di livello superiore (il nome fino al primo "
"punto), *non* il modulo denominato *name*. Tuttavia, quando viene fornito un "
"argomento *fromlist* non vuoto, viene restituito il modulo denominato *name*."

#: library/functions.rst:2145
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""
"Ad esempio, la dichiarazione ``import spam`` risulta in un bytecode simile "
"al seguente codice::"

#: library/functions.rst:2150
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "La dichiarazione ``import spam.ham`` risulta in questa chiamata::"

#: library/functions.rst:2154
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"Nota come :func:`__import__` restituisce qui il modulo di livello superiore "
"perché questo è l'oggetto che viene associato a un nome dalla dichiarazione :"
"keyword:`import`."

#: library/functions.rst:2157
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""
"D'altra parte, la dichiarazione ``from spam.ham import eggs, sausage as "
"saus`` risulta in ::"

#: library/functions.rst:2164
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"Qui, il modulo ``spam.ham`` viene restituito da :func:`__import__`. Da "
"questo oggetto, vengono recuperati i nomi da importare e assegnati ai loro "
"rispettivi nomi."

#: library/functions.rst:2168
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""
"Se vuoi semplicemente importare un modulo (potenzialmente all'interno di un "
"pacchetto) per nome, usa :func:`importlib.import_module`."

#: library/functions.rst:2171
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr ""
"I valori negativi per *level* non sono più supportati (il che cambia anche "
"il valore predefinito a 0)."

#: library/functions.rst:2175
msgid ""
"When the command line options :option:`-E` or :option:`-I` are being used, "
"the environment variable :envvar:`PYTHONCASEOK` is now ignored."
msgstr ""
"Quando vengono utilizzate le opzioni della linea di comando :option:`-E` o :"
"option:`-I`, la variabile d'ambiente :envvar:`PYTHONCASEOK` viene ora "
"ignorata."

#: library/functions.rst:2180
msgid "Footnotes"
msgstr "Note a piè di pagina"

#: library/functions.rst:2181
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr ""
"Nota che il parser accetta solo la convenzione Unix per la fine della riga. "
"Se stai leggendo il codice da un file, assicurati di usare la modalità di "
"conversione delle interruzioni di riga per convertire le interruzioni di "
"riga in stile Windows o Mac."

#: library/functions.rst:154
msgid "Boolean"
msgstr "Booleano"

#: library/functions.rst:1954
msgid "type"
msgstr "tipo"

#: library/functions.rst:631
msgid "built-in function"
msgstr "funzione incorporata"

#: library/functions.rst:631
msgid "exec"
msgstr "exec"

#: library/functions.rst:713
msgid "NaN"
msgstr "NaN"

#: library/functions.rst:713
msgid "Infinity"
msgstr "Infinito"

#: library/functions.rst:781
msgid "__format__"
msgstr "__format__"

#: library/functions.rst:1838
msgid "string"
msgstr "stringa"

#: library/functions.rst:781
msgid "format() (built-in function)"
msgstr "format() (funzione incorporata)"

#: library/functions.rst:1248
msgid "file object"
msgstr "oggetto file"

#: library/functions.rst:1369
msgid "open() built-in function"
msgstr "open() funzione incorporata"

#: library/functions.rst:1276
msgid "file"
msgstr "file"

#: library/functions.rst:1276
msgid "modes"
msgstr "modalità"

#: library/functions.rst:1369
msgid "universal newlines"
msgstr "interruzioni di riga universali"

#: library/functions.rst:1430
msgid "line-buffered I/O"
msgstr "I/O con buffer di linea"

#: library/functions.rst:1430
msgid "unbuffered I/O"
msgstr "I/O non bufferizzato"

#: library/functions.rst:1430
msgid "buffer size, I/O"
msgstr "dimensione buffer, I/O"

#: library/functions.rst:1430
msgid "I/O control"
msgstr "controllo I/O"

#: library/functions.rst:1430
msgid "buffering"
msgstr "buffering"

#: library/functions.rst:1430
msgid "text mode"
msgstr "modalità testo"

#: library/functions.rst:2109
msgid "module"
msgstr "modulo"

#: library/functions.rst:1430
msgid "sys"
msgstr "sys"

#: library/functions.rst:1838
msgid "str() (built-in function)"
msgstr "str() (funzione incorporata)"

#: library/functions.rst:1954
msgid "object"
msgstr "oggetto"

#: library/functions.rst:2109
msgid "statement"
msgstr "istruzione"

#: library/functions.rst:2109
msgid "import"
msgstr "import"

#: library/functions.rst:2109
msgid "builtins"
msgstr "builtins"

#~ msgid ""
#~ "Return a complex number with the value *real* + *imag*\\*1j or convert a "
#~ "string or number to a complex number.  If the first parameter is a "
#~ "string, it will be interpreted as a complex number and the function must "
#~ "be called without a second parameter.  The second parameter can never be "
#~ "a string. Each argument may be any numeric type (including complex).  If "
#~ "*imag* is omitted, it defaults to zero and the constructor serves as a "
#~ "numeric conversion like :class:`int` and :class:`float`.  If both "
#~ "arguments are omitted, returns ``0j``."
#~ msgstr ""
#~ "Restituisce un numero complesso con il valore *real* + *imag*\\*1j o "
#~ "converte una stringa o un numero in un numero complesso. Se il primo "
#~ "parametro è una stringa, verrà interpretato come un numero complesso e la "
#~ "funzione deve essere chiamata senza un secondo parametro. Il secondo "
#~ "parametro non può mai essere una stringa. Ogni argomento può essere di "
#~ "qualsiasi tipo numerico (incluso complesso). Se *imag* è omesso, viene "
#~ "impostato a zero per impostazione predefinita e il costruttore funge da "
#~ "conversione numerica come :class:`int` e :class:`float`. Se entrambi gli "
#~ "argomenti sono omessi, restituisce ``0j``."

#~ msgid ""
#~ "When converting from a string, the string must not contain whitespace "
#~ "around the central ``+`` or ``-`` operator.  For example, "
#~ "``complex('1+2j')`` is fine, but ``complex('1 + 2j')`` raises :exc:"
#~ "`ValueError`."
#~ msgstr ""
#~ "Quando si converte una stringa, la stringa non deve contenere spazi "
#~ "intorno all'operatore centrale ``+`` o ``-``. Ad esempio, "
#~ "``complex('1+2j')`` va bene, ma ``complex('1 + 2j')`` solleva "
#~ "un'eccezione :exc:`ValueError`."

#~ msgid "The *globals* and *locals* arguments can now be passed as keywords."
#~ msgstr ""
#~ "Gli argomenti *globals* e *locals* possono ora essere passati come parole "
#~ "chiave."

#~ msgid ""
#~ "The semantics of the default *locals* namespace have been adjusted as "
#~ "described for the :func:`locals` builtin."
#~ msgstr ""
#~ "La semantica dello spazio dei nomi *locals* predefinito è stata "
#~ "modificata come descritto peril builtin :func:`locals`."

#~ msgid ""
#~ "When ``exec`` gets two separate objects as *globals* and *locals*, the "
#~ "code will be executed as if it were embedded in a class definition. This "
#~ "means functions and classes defined in the executed code will not be able "
#~ "to access variables assigned at the top level (as the \"top level\" "
#~ "variables are treated as class variables in a class definition)."
#~ msgstr ""
#~ "Quando ``exec`` ottiene due oggetti separati come *globals* e *locals*, "
#~ "il codice verrà eseguito come se fosse incorporato in una definizione di "
#~ "classe. Ciò significa che le funzioni e le classi definite nel codice "
#~ "eseguito non potranno accedere alle variabili assegnate a livello di alto "
#~ "(poiché le variabili \"di alto livello\" sono trattate come variabili di "
#~ "classe in una definizione di classe)."

#~ msgid ""
#~ "Return a mapping object representing the current local symbol table, with "
#~ "variable names as the keys, and their currently bound references as the "
#~ "values."
#~ msgstr ""
#~ "Restituisce un oggetto di mapping che rappresenta la tabella dei simboli "
#~ "locali corrente, con i nomi delle variabili come chiavi e i riferimenti "
#~ "attualmente associati come valori."

#~ msgid ""
#~ "At module scope, as well as when using :func:`exec` or :func:`eval` with "
#~ "a single namespace, this function returns the same namespace as :func:"
#~ "`globals`."
#~ msgstr ""
#~ "A livello di modulo, così come quando si usa :func:`exec` o :func:`eval` "
#~ "con uno spazio dei nomi singolo, questa funzione restituisce lo stesso "
#~ "spazio dei nomi di :func:`globals`."

#~ msgid ""
#~ "At class scope, it returns the namespace that will be passed to the "
#~ "metaclass constructor."
#~ msgstr ""
#~ "A livello di classe, restituisce lo spazio dei nomi che sarà passato al "
#~ "costruttore della metaclasse."

#~ msgid ""
#~ "When using ``exec()`` or ``eval()`` with separate local and global "
#~ "arguments, it returns the local namespace passed in to the function call."
#~ msgstr ""
#~ "Quando si usa ``exec()`` o ``eval()`` con argomenti locali e globali "
#~ "separati, restituisce lo spazio dei nomi locale passato alla chiamata "
#~ "della funzione."

#~ msgid ""
#~ "In all of the above cases, each call to ``locals()`` in a given frame of "
#~ "execution will return the *same* mapping object. Changes made through the "
#~ "mapping object returned from ``locals()`` will be visible as assigned, "
#~ "reassigned, or deleted local variables, and assigning, reassigning, or "
#~ "deleting local variables will immediately affect the contents of the "
#~ "returned mapping object."
#~ msgstr ""
#~ "In tutti i casi sopra menzionati, ogni chiamata a ``locals()`` in un "
#~ "determinato frame di esecuzione restituirà lo *stesso* oggetto di "
#~ "mapping. Le modifiche apportate tramite l'oggetto di mapping restituito "
#~ "da ``locals()`` saranno visibili come variabili locali assegnate, "
#~ "riassegnate o eliminate, e assegnare, riassegnare o eliminare variabili "
#~ "locali influenzerà immediatamente il contenuto dell'oggetto di mapping "
#~ "restituito."

#~ msgid ""
#~ "In an :term:`optimized scope` (including functions, generators, and "
#~ "coroutines), each call to ``locals()`` instead returns a fresh dictionary "
#~ "containing the current bindings of the function's local variables and any "
#~ "nonlocal cell references. In this case, name binding changes made via the "
#~ "returned dict are *not* written back to the corresponding local variables "
#~ "or nonlocal cell references, and assigning, reassigning, or deleting "
#~ "local variables and nonlocal cell references does *not* affect the "
#~ "contents of previously returned dictionaries."
#~ msgstr ""
#~ "In un :term:`optimized scope` (inclusi funzioni, generatori e coroutine), "
#~ "ogni chiamata a ``locals()`` restituisce invece un dizionario nuovo "
#~ "contenente i binding correnti delle variabili locali della funzione e "
#~ "qualsiasi riferimento a celle non locali. In questo caso, le modifiche ai "
#~ "binding dei nomi apportate tramite il dizionario restituito non vengono "
#~ "scritte nuovamente nelle corrispondenti variabili locali o nei "
#~ "riferimenti a celle non locali, e assegnare, riassegnare o eliminare "
#~ "variabili locali e riferimenti a celle non locali non influisce sul "
#~ "contenuto dei dizionari precedentemente restituiti."

#~ msgid ""
#~ "Calling ``locals()`` as part of a comprehension in a function, generator, "
#~ "or coroutine is equivalent to calling it in the containing scope, except "
#~ "that the comprehension's initialised iteration variables will be "
#~ "included. In other scopes, it behaves as if the comprehension were "
#~ "running as a nested function."
#~ msgstr ""
#~ "Chiamare ``locals()`` come parte di una comprensione in una funzione, "
#~ "generatore o coroutine equivale a chiamarlo nello scope contenente, "
#~ "eccetto che le variabili di iterazione inizializzate della comprensione "
#~ "saranno incluse. In altri scope, si comporta come se la comprensione "
#~ "stesse eseguendo come una funzione annidata."

#~ msgid ""
#~ "Calling ``locals()`` as part of a generator expression is equivalent to "
#~ "calling it in a nested generator function."
#~ msgstr ""
#~ "Chiamare ``locals()`` come parte di un'espressione del generatore "
#~ "equivale a chiamarlo in una funzione generatore annidata."

#~ msgid ""
#~ "The behaviour of ``locals()`` in a comprehension has been updated as "
#~ "described in :pep:`709`."
#~ msgstr ""
#~ "Il comportamento di ``locals()`` in una comprensione è stato aggiornato "
#~ "come descritto in :pep:`709`."

#~ msgid ""
#~ "As part of :pep:`667`, the semantics of mutating the mapping objects "
#~ "returned from this function are now defined. The behavior in :term:"
#~ "`optimized scopes <optimized scope>` is now as described above. Aside "
#~ "from being defined, the behaviour in other scopes remains unchanged from "
#~ "previous versions."
#~ msgstr ""
#~ "Come parte di :pep:`667`, sono ora definiti i semantici della modifica "
#~ "degli oggetti mapping restituiti da questa funzione. Il comportamento in :"
#~ "term:`ambiti ottimizzati <optimized scope>` è ora come descritto sopra. A "
#~ "parte essere definiti, il comportamento in altri ambiti rimane invariato "
#~ "rispetto alle versioni precedenti."

#~ msgid ""
#~ "When called directly within an ordinary method of a class, both arguments "
#~ "may be omitted (\"zero-argument :func:`!super`\"). In this case, *type* "
#~ "will be the enclosing class, and *obj* will be the first argument of the "
#~ "immediately enclosing function (typically ``self``). (This means that "
#~ "zero-argument :func:`!super` will not work as expected within nested "
#~ "functions, including generator expressions, which implicitly create "
#~ "nested functions.)"
#~ msgstr ""
#~ "Quando viene chiamato direttamente all'interno di un metodo ordinario di "
#~ "una classe, entrambi gli argomenti possono essere omessi (\"zero-"
#~ "argomento :func:`!super`\"). In questo caso, *type* sarà la classe "
#~ "contenitrice e *obj* sarà il primo argomento della funzione "
#~ "immediatamente contenitrice (di solito ``self``). (Questo significa che :"
#~ "func:`!super` con zero argomenti non funzionerà come previsto all'interno "
#~ "di funzioni nidificate, inclusi gli espressioni generatore, che creano "
#~ "implicitamente funzioni nidificate)."

#~ msgid "Without an argument, :func:`vars` acts like :func:`locals`."
#~ msgstr "Senza argomento, :func:`vars` si comporta come :func:`locals`."

#~ msgid ""
#~ "The result of calling this function without an argument has been updated "
#~ "as described for the :func:`locals` builtin."
#~ msgstr ""
#~ "Il risultato della chiamata a questa funzione senza argomento è stato "
#~ "aggiornato come descritto per il builtin :func:`locals`."
